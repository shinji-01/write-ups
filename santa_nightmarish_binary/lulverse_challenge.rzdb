/
type=rizin rz-db project
version=5

/core
blocksize=0x800
offset=0x1879

/core/analysis

/core/analysis/blocks
0x1000={"size":20,"jump":4118,"fail":4116,"traced":true,"ninstr":5,"op_pos":[4,8,15,18],"stackptr":8,"parent_stackptr":0}
0x1014={"size":2,"jump":4118,"ninstr":1,"stackptr":-8,"parent_stackptr":8}
0x1016={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":-8,"parent_stackptr":8}
0x1030={"size":6,"ninstr":1,"parent_stackptr":0}
0x1040={"size":6,"ninstr":1,"parent_stackptr":0}
0x1050={"size":6,"ninstr":1,"parent_stackptr":0}
0x1060={"size":6,"ninstr":1,"parent_stackptr":0}
0x1070={"size":6,"ninstr":1,"parent_stackptr":0}
0x1080={"size":6,"ninstr":1,"parent_stackptr":0}
0x1090={"size":6,"ninstr":1,"parent_stackptr":0}
0x10a0={"size":6,"ninstr":1,"parent_stackptr":0}
0x10b0={"size":6,"ninstr":1,"parent_stackptr":0}
0x10c0={"size":6,"ninstr":1,"parent_stackptr":0}
0x10d0={"size":6,"ninstr":1,"parent_stackptr":0}
0x10e0={"size":6,"ninstr":1,"parent_stackptr":0}
0x10f0={"size":6,"ninstr":1,"parent_stackptr":0}
0x1100={"size":6,"ninstr":1,"parent_stackptr":0}
0x1110={"size":6,"ninstr":1,"parent_stackptr":0}
0x1120={"size":6,"ninstr":1,"parent_stackptr":0}
0x1130={"size":6,"ninstr":1,"parent_stackptr":0}
0x1140={"size":6,"ninstr":1,"parent_stackptr":0}
0x1150={"size":6,"ninstr":1,"parent_stackptr":0}
0x1160={"size":6,"ninstr":1,"parent_stackptr":0}
0x1170={"size":6,"ninstr":1,"parent_stackptr":0}
0x1180={"size":6,"ninstr":1,"parent_stackptr":0}
0x1190={"size":6,"ninstr":1,"parent_stackptr":0}
0x11a0={"size":6,"ninstr":1,"parent_stackptr":0}
0x11b0={"size":46,"traced":true,"ninstr":12,"op_pos":[4,6,9,10,13,17,18,19,26,33,40],"stackptr":8,"parent_stackptr":0}
0x11e0={"size":19,"jump":4616,"fail":4595,"traced":true,"ninstr":4,"op_pos":[7,14,17],"parent_stackptr":0}
0x11f3={"size":12,"jump":4616,"fail":4607,"traced":true,"ninstr":3,"op_pos":[7,10],"parent_stackptr":0}
0x11ff={"size":2,"ninstr":1,"parent_stackptr":0}
0x1208={"size":1,"ninstr":1,"stackptr":-8,"parent_stackptr":0}
0x1210={"size":36,"jump":4680,"fail":4660,"traced":true,"ninstr":9,"op_pos":[7,14,17,20,24,28,31,34],"parent_stackptr":0}
0x1234={"size":12,"jump":4680,"fail":4672,"traced":true,"ninstr":3,"op_pos":[7,10],"parent_stackptr":0}
0x1240={"size":2,"ninstr":1,"parent_stackptr":0}
0x1248={"size":1,"ninstr":1,"stackptr":-8,"parent_stackptr":0}
0x1250={"size":13,"jump":4752,"fail":4701,"traced":true,"ninstr":3,"op_pos":[4,11],"parent_stackptr":0}
0x125d={"size":14,"jump":4728,"fail":4715,"traced":true,"ninstr":4,"op_pos":[1,9,12],"stackptr":8,"parent_stackptr":0}
0x126b={"size":13,"jump":4728,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":-8,"parent_stackptr":8}
0x1278={"size":14,"traced":true,"ninstr":4,"op_pos":[5,12,13],"stackptr":-8,"parent_stackptr":8}
0x1290={"size":1,"ninstr":1,"stackptr":-8,"parent_stackptr":0}
0x12a0={"size":9,"jump":4624,"traced":true,"ninstr":2,"op_pos":[4],"parent_stackptr":0}
0x12a9={"size":17,"jump":4877,"fail":4794,"traced":true,"ninstr":6,"op_pos":[1,4,8,11,15],"stackptr":24,"parent_stackptr":0}
0x12ba={"size":83,"jump":4877,"traced":true,"ninstr":18,"op_pos":[6,9,11,18,21,26,31,37,39,47,54,57,60,66,69,75,81],"stackptr":24,"parent_stackptr":24}
0x130d={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":8,"parent_stackptr":24}
0x130f={"size":175,"jump":5064,"fail":5054,"traced":true,"ninstr":27,"op_pos":[1,4,11,18,25,34,38,40,47,52,57,60,65,76,87,98,109,120,131,140,145,150,155,160,166,173],"stackptr":488,"parent_stackptr":0}
0x13be={"size":10,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":488,"parent_stackptr":488}
0x13c8={"size":165,"jump":5272,"fail":5229,"traced":true,"ninstr":32,"op_pos":[9,16,23,30,33,36,41,46,53,60,64,67,70,75,82,85,91,98,101,106,109,116,123,129,135,138,143,145,150,156,163],"stackptr":488,"parent_stackptr":488}
0x146d={"size":43,"traced":true,"ninstr":9,"op_pos":[7,10,15,20,26,28,33,38],"stackptr":488,"parent_stackptr":488}
0x1498={"size":39,"jump":5316,"fail":5311,"traced":true,"ninstr":8,"op_pos":[6,8,13,19,24,28,37],"stackptr":488,"parent_stackptr":488}
0x14bf={"size":5,"ninstr":1,"stackptr":488,"parent_stackptr":488}
0x14c4={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":472,"parent_stackptr":488}
0x14c6={"size":121,"jump":5449,"fail":5439,"traced":true,"ninstr":24,"op_pos":[1,4,11,20,24,26,36,43,48,53,56,61,68,73,78,81,86,91,96,101,106,112,119],"stackptr":584,"parent_stackptr":0}
0x153f={"size":10,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":584,"parent_stackptr":584}
0x1549={"size":221,"jump":5693,"fail":5670,"traced":true,"ninstr":36,"op_pos":[9,20,31,42,53,64,75,84,89,91,98,105,108,111,116,121,128,135,139,142,145,150,160,167,170,175,181,183,190,196,199,201,206,212,219],"stackptr":584,"parent_stackptr":584}
0x1626={"size":23,"traced":true,"ninstr":5,"op_pos":[6,8,13,18],"stackptr":584,"parent_stackptr":584}
0x163d={"size":65,"jump":5781,"fail":5758,"traced":true,"ninstr":13,"op_pos":[7,14,21,27,30,33,38,43,45,50,56,63],"stackptr":584,"parent_stackptr":584}
0x167e={"size":23,"traced":true,"ninstr":5,"op_pos":[6,8,13,18],"stackptr":584,"parent_stackptr":584}
0x1695={"size":50,"jump":5836,"fail":5831,"traced":true,"ninstr":10,"op_pos":[7,10,15,21,23,28,35,39,48],"stackptr":584,"parent_stackptr":584}
0x16c7={"size":5,"ninstr":1,"stackptr":584,"parent_stackptr":584}
0x16cc={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":568,"parent_stackptr":584}
0x16ce={"size":102,"jump":5951,"fail":5940,"traced":true,"ninstr":21,"op_pos":[1,4,11,17,24,33,37,39,46,49,54,60,65,72,75,77,82,87,93,100],"stackptr":216,"parent_stackptr":0}
0x1734={"size":11,"jump":5951,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":216,"parent_stackptr":216}
0x173f={"size":9,"jump":5975,"fail":5960,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216}
0x1748={"size":15,"jump":5975,"traced":true,"ninstr":3,"op_pos":[7,10],"stackptr":216,"parent_stackptr":216}
0x1757={"size":9,"jump":5997,"fail":5984,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216}
0x1760={"size":13,"jump":6698,"fail":5997,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216}
0x176d={"size":23,"jump":6162,"fail":6020,"traced":true,"ninstr":3,"op_pos":[10,17],"stackptr":216,"parent_stackptr":216}
0x1784={"size":13,"jump":6162,"fail":6033,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216}
0x1791={"size":129,"jump":6300,"traced":true,"ninstr":17,"op_pos":[10,20,30,40,47,54,61,68,75,82,89,96,103,110,117,124],"stackptr":216,"parent_stackptr":216}
0x1812={"size":138,"jump":6300,"traced":true,"ninstr":18,"op_pos":[10,20,30,40,47,54,61,68,75,82,89,96,103,110,117,124,131],"stackptr":216,"parent_stackptr":216}
0x189c={"size":109,"jump":6456,"fail":6409,"traced":true,"ninstr":28,"op_pos":[5,10,16,23,30,37,40,43,50,54,56,59,61,64,66,68,71,73,75,77,83,85,93,100,103,105,107],"parent_stackptr":216}
0x1909={"size":47,"traced":true,"ninstr":10,"op_pos":[7,10,15,20,25,30,32,37,42],"stackptr":216,"parent_stackptr":216}
0x1938={"size":132,"jump":6635,"fail":6588,"traced":true,"ninstr":34,"op_pos":[6,13,18,21,23,28,35,38,45,47,54,57,60,63,70,74,76,79,81,84,86,89,91,93,99,101,105,113,120,123,125,128,130],"stackptr":216,"parent_stackptr":216}
0x19bc={"size":47,"traced":true,"ninstr":10,"op_pos":[7,10,15,20,25,30,32,37,42],"stackptr":216,"parent_stackptr":216}
0x19eb={"size":9,"jump":6664,"fail":6644,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216}
0x19f4={"size":9,"jump":6664,"fail":6653,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216}
0x19fd={"size":9,"jump":6673,"fail":6662,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216,"cmpval":6}
0x1a06={"size":2,"jump":6679,"ninstr":1,"stackptr":216,"parent_stackptr":216}
0x1a08={"size":9,"jump":6678,"fail":6673,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216,"cmpval":12}
0x1a11={"size":5,"jump":6300,"ninstr":1,"stackptr":216,"parent_stackptr":216}
0x1a16={"size":1,"jump":6679,"traced":true,"ninstr":1,"stackptr":216,"parent_stackptr":216}
0x1a17={"size":14,"jump":7092,"fail":6693,"traced":true,"ninstr":3,"op_pos":[1,8],"parent_stackptr":216}
0x1a25={"size":5,"jump":7024,"ninstr":1,"stackptr":216,"parent_stackptr":216}
0x1a2a={"size":38,"jump":6996,"traced":true,"ninstr":5,"op_pos":[7,13,23,33],"stackptr":216,"parent_stackptr":216}
0x1a50={"size":148,"jump":6919,"fail":6884,"traced":true,"ninstr":32,"op_pos":[5,11,17,24,29,32,34,39,46,49,51,58,61,66,71,76,81,86,91,97,104,107,109,116,119,124,129,134,141,144,146],"stackptr":216,"parent_stackptr":216}
0x1ae4={"size":35,"jump":6952,"traced":true,"ninstr":8,"op_pos":[6,10,17,20,23,28,33],"stackptr":216,"parent_stackptr":216}
0x1b07={"size":33,"jump":6952,"traced":true,"ninstr":7,"op_pos":[6,10,17,20,23,28],"stackptr":216,"parent_stackptr":216,"cmpval":10}
0x1b28={"size":37,"jump":6736,"fail":6989,"traced":true,"ninstr":8,"op_pos":[7,11,14,17,22,29,31],"parent_stackptr":216}
0x1b4d={"size":7,"jump":6996,"traced":true,"ninstr":1,"stackptr":216,"parent_stackptr":216}
0x1b54={"size":18,"jump":6736,"fail":7014,"traced":true,"ninstr":3,"op_pos":[6,12],"stackptr":216,"parent_stackptr":216}
0x1b66={"size":10,"traced":true,"ninstr":2,"op_pos":[5],"stackptr":216,"parent_stackptr":216}
0x1b70={"size":9,"jump":7092,"fail":7033,"traced":true,"ninstr":2,"op_pos":[7],"stackptr":216,"parent_stackptr":216}
0x1b79={"size":57,"jump":7127,"fail":7090,"traced":true,"ninstr":12,"op_pos":[7,10,15,20,25,30,32,37,42,46,55],"stackptr":216,"parent_stackptr":216}
0x1bb2={"size":2,"jump":7122,"ninstr":1,"stackptr":216,"parent_stackptr":216}
0x1bb4={"size":30,"traced":true,"ninstr":6,"op_pos":[7,10,15,20,25],"stackptr":216,"parent_stackptr":216}
0x1bd2={"size":5,"ninstr":1,"stackptr":216,"parent_stackptr":216}
0x1bd7={"size":2,"traced":true,"ninstr":2,"op_pos":[1],"stackptr":200,"parent_stackptr":216}
0x1be0={"size":55,"jump":7222,"fail":7191,"traced":true,"ninstr":17,"op_pos":[4,6,13,15,18,20,23,25,28,29,36,37,40,44,49,53],"stackptr":56,"parent_stackptr":0}
0x1c17={"size":9,"jump":7200,"traced":true,"ninstr":2,"op_pos":[2],"stackptr":56,"parent_stackptr":56}
0x1c20={"size":22,"jump":7200,"fail":7222,"traced":true,"ninstr":7,"op_pos":[3,6,9,13,17,20],"parent_stackptr":56}
0x1c36={"size":15,"traced":true,"ninstr":8,"op_pos":[4,5,6,8,10,12,14],"stackptr":-8,"parent_stackptr":56}
0x1c50={"size":5,"traced":true,"ninstr":2,"op_pos":[4],"stackptr":-8,"parent_stackptr":0}
0x1c58={"size":13,"traced":true,"ninstr":4,"op_pos":[4,8,12],"stackptr":-8,"parent_stackptr":0}

/core/analysis/callables
_Exit=func
__libc_init_array=func
__stack_chk_fail=func
__tolower=func
__toupper=func
_exit=func
abort=func
abs=func
acos=func
acosf=func
acosh=func
acoshf=func
acoshl=func
acosl=func
arc4random=func
asctime=func
asin=func
asinf=func
asinh=func
asinhf=func
asinhl=func
asinl=func
at_quick_exit=func
atan=func
atanf=func
atanh=func
atanhf=func
atanhl=func
atanl=func
atexit=func
atof=func
atoi=func
atol=func
atoll=func
basename=func
btowc=func
cbrt=func
cbrtf=func
cbrtl=func
ceil=func
ceilf=func
ceill=func
clearerr=func
clock=func
close=func
cos=func
cosf=func
cosh=func
coshf=func
coshl=func
cosl=func
ctime=func
entry.init0=func
entry0=func
erf=func
erfc=func
erfcf=func
erfcl=func
erff=func
erfl=func
err=func
errc=func
errx=func
exit=func
exp=func
exp2=func
exp2f=func
exp2l=func
expf=func
expl=func
expm1=func
expm1f=func
expm1l=func
fabs=func
fabsf=func
fabsl=func
fclose=func
feclearexcept=func
fegetenv=func
fegetround=func
feholdexcept=func
feof=func
feraiseexcept=func
ferror=func
fesetenv=func
fesetround=func
fetestexcept=func
feupdateenv=func
fflush=func
fgetc=func
fgetwc=func
fileno=func
floor=func
floorf=func
floorl=func
fpclassify=func
free=func
ftell=func
fts_close_INODE64=func
fts_read_INODE64=func
func._Exit.arg.0=int,status
func._Exit.args=0x1
func._Exit.noreturn=true
func._Exit.ret=void
func.__libc_init_array.args=0
func.__libc_init_array.ret=void
func.__stack_chk_fail.args=0
func.__stack_chk_fail.noreturn=true
func.__stack_chk_fail.ret=void
func.__tolower.arg.0=int,c
func.__tolower.args=0x1
func.__tolower.ret=int
func.__toupper.arg.0=int,c
func.__toupper.args=0x1
func.__toupper.ret=int
func._exit.arg.0=int,status
func._exit.args=0x1
func._exit.noreturn=true
func._exit.ret=void
func.abort.args=0
func.abort.noreturn=true
func.abort.ret=void
func.abs.arg.0=int,j
func.abs.args=0x1
func.abs.ret=int
func.acos.arg.0=double,x
func.acos.args=0x1
func.acos.ret=double
func.acosf.arg.0=float,x
func.acosf.args=0x1
func.acosf.ret=float
func.acosh.arg.0=double,x
func.acosh.args=0x1
func.acosh.ret=double
func.acoshf.arg.0=float,x
func.acoshf.args=0x1
func.acoshf.ret=float
func.acoshl.arg.0=long double,x
func.acoshl.args=0x1
func.acoshl.ret=long double
func.acosl.arg.0=long double,x
func.acosl.args=0x1
func.acosl.ret=long double
func.arc4random.args=0
func.arc4random.ret=uint32_t
func.asctime.arg.0=struct tm *,timeptr
func.asctime.args=0x1
func.asctime.ret=char *
func.asin.arg.0=double,x
func.asin.args=0x1
func.asin.ret=double
func.asinf.arg.0=float,x
func.asinf.args=0x1
func.asinf.ret=float
func.asinh.arg.0=double,x
func.asinh.args=0x1
func.asinh.ret=double
func.asinhf.arg.0=float,x
func.asinhf.args=0x1
func.asinhf.ret=float
func.asinhl.arg.0=long double,x
func.asinhl.args=0x1
func.asinhl.ret=long double
func.asinl.arg.0=long double,x
func.asinl.args=0x1
func.asinl.ret=long double
func.at_quick_exit.args=0
func.at_quick_exit.ret=int
func.atan.arg.0=double,x
func.atan.args=0x1
func.atan.ret=double
func.atanf.arg.0=float,x
func.atanf.args=0x1
func.atanf.ret=float
func.atanh.arg.0=double,x
func.atanh.args=0x1
func.atanh.ret=double
func.atanhf.arg.0=float,x
func.atanhf.args=0x1
func.atanhf.ret=float
func.atanhl.arg.0=long double,x
func.atanhl.args=0x1
func.atanhl.ret=long double
func.atanl.arg.0=long double,x
func.atanl.args=0x1
func.atanl.ret=long double
func.atexit.arg.0=void *,function
func.atexit.args=0x1
func.atexit.ret=int
func.atof.arg.0=const char *,str
func.atof.args=0x1
func.atof.ret=double
func.atoi.arg.0=const char *,str
func.atoi.args=0x1
func.atoi.ret=int
func.atol.arg.0=const char *,str
func.atol.args=0x1
func.atol.ret=long
func.atoll.arg.0=const char *,str
func.atoll.args=0x1
func.atoll.ret=long long
func.basename.arg.0=char *,path
func.basename.args=0x1
func.basename.ret=char *
func.btowc.arg.0=int,c
func.btowc.args=0x1
func.btowc.ret=wint_t
func.cbrt.arg.0=double,x
func.cbrt.args=0x1
func.cbrt.ret=double
func.cbrtf.arg.0=float,x
func.cbrtf.args=0x1
func.cbrtf.ret=float
func.cbrtl.arg.0=long double,x
func.cbrtl.args=0x1
func.cbrtl.ret=long double
func.ceil.arg.0=double,x
func.ceil.args=0x1
func.ceil.ret=double
func.ceilf.arg.0=float,x
func.ceilf.args=0x1
func.ceilf.ret=float
func.ceill.arg.0=long double,x
func.ceill.args=0x1
func.ceill.ret=long double
func.clearerr.arg.0=FILE *,stream
func.clearerr.args=0x1
func.clearerr.ret=void
func.clock.args=0
func.clock.ret=clock_t
func.close.arg.0=int,fildes
func.close.args=0x1
func.close.ret=int
func.cos.arg.0=double,x
func.cos.args=0x1
func.cos.ret=double
func.cosf.arg.0=float,x
func.cosf.args=0x1
func.cosf.ret=float
func.cosh.arg.0=double,x
func.cosh.args=0x1
func.cosh.ret=double
func.coshf.arg.0=float,x
func.coshf.args=0x1
func.coshf.ret=float
func.coshl.arg.0=long double,x
func.coshl.args=0x1
func.coshl.ret=long double
func.cosl.arg.0=long double,x
func.cosl.args=0x1
func.cosl.ret=long double
func.ctime.arg.0=time_t *,timer
func.ctime.args=0x1
func.ctime.ret=char *
func.entry.init0.args=0
func.entry.init0.ret=void
func.entry0.arg.0=void *,rtld_fini
func.entry0.args=0x1
func.entry0.ret=void
func.erf.arg.0=double,x
func.erf.args=0x1
func.erf.ret=double
func.erfc.arg.0=double,x
func.erfc.args=0x1
func.erfc.ret=double
func.erfcf.arg.0=float,x
func.erfcf.args=0x1
func.erfcf.ret=float
func.erfcl.arg.0=long double,x
func.erfcl.args=0x1
func.erfcl.ret=long double
func.erff.arg.0=float,x
func.erff.args=0x1
func.erff.ret=float
func.erfl.arg.0=long double,x
func.erfl.args=0x1
func.erfl.ret=long double
func.err.arg.0=int,eval
func.err.args=0x1
func.err.noreturn=true
func.err.ret=void
func.errc.arg.0=int,eval
func.errc.args=0x1
func.errc.noreturn=true
func.errc.ret=void
func.errx.arg.0=int,eval
func.errx.args=0x1
func.errx.noreturn=true
func.errx.ret=void
func.exit.arg.0=int,status
func.exit.args=0x1
func.exit.noreturn=true
func.exit.ret=void
func.exp.arg.0=double,x
func.exp.args=0x1
func.exp.ret=double
func.exp2.arg.0=double,x
func.exp2.args=0x1
func.exp2.ret=double
func.exp2f.arg.0=float,x
func.exp2f.args=0x1
func.exp2f.ret=float
func.exp2l.arg.0=long double,x
func.exp2l.args=0x1
func.exp2l.ret=long double
func.expf.arg.0=float,x
func.expf.args=0x1
func.expf.ret=float
func.expl.arg.0=long double,x
func.expl.args=0x1
func.expl.ret=long double
func.expm1.arg.0=double,x
func.expm1.args=0x1
func.expm1.ret=double
func.expm1f.arg.0=float,x
func.expm1f.args=0x1
func.expm1f.ret=float
func.expm1l.arg.0=long double,x
func.expm1l.args=0x1
func.expm1l.ret=long double
func.fabs.arg.0=double,x
func.fabs.args=0x1
func.fabs.ret=double
func.fabsf.arg.0=float,x
func.fabsf.args=0x1
func.fabsf.ret=float
func.fabsl.arg.0=long double,x
func.fabsl.args=0x1
func.fabsl.ret=long double
func.fclose.arg.0=FILE *,stream
func.fclose.args=0x1
func.fclose.ret=int
func.feclearexcept.arg.0=int,excepts
func.feclearexcept.args=0x1
func.feclearexcept.ret=int
func.fegetenv.arg.0=fenv_t *,envp
func.fegetenv.args=0x1
func.fegetenv.ret=int
func.fegetround.args=0
func.fegetround.ret=int
func.feholdexcept.arg.0=fenv_t *,envp
func.feholdexcept.args=0x1
func.feholdexcept.ret=int
func.feof.arg.0=FILE *,stream
func.feof.args=0x1
func.feof.ret=int
func.feraiseexcept.arg.0=int,excepts
func.feraiseexcept.args=0x1
func.feraiseexcept.ret=int
func.ferror.arg.0=FILE *,stream
func.ferror.args=0x1
func.ferror.ret=int
func.fesetenv.arg.0=fenv_t *,arg
func.fesetenv.args=0x1
func.fesetenv.ret=int
func.fesetround.arg.0=int,round
func.fesetround.args=0x1
func.fesetround.ret=int
func.fetestexcept.arg.0=int,excepts
func.fetestexcept.args=0x1
func.fetestexcept.ret=int
func.feupdateenv.arg.0=fenv_t *,arg
func.feupdateenv.args=0x1
func.feupdateenv.ret=int
func.fflush.arg.0=FILE *,stream
func.fflush.args=0x1
func.fflush.ret=int
func.fgetc.arg.0=FILE *,stream
func.fgetc.args=0x1
func.fgetc.ret=int
func.fgetwc.arg.0=FILE *,stream
func.fgetwc.args=0x1
func.fgetwc.ret=wint_t
func.fileno.arg.0=FILE *,stream
func.fileno.args=0x1
func.fileno.ret=int
func.floor.arg.0=double,x
func.floor.args=0x1
func.floor.ret=double
func.floorf.arg.0=float,x
func.floorf.args=0x1
func.floorf.ret=float
func.floorl.arg.0=long double,x
func.floorl.args=0x1
func.floorl.ret=long double
func.fpclassify.arg.0=double,x
func.fpclassify.args=0x1
func.fpclassify.ret=int
func.free.arg.0=void *,ptr
func.free.args=0x1
func.free.ret=void
func.ftell.arg.0=FILE *,stream
func.ftell.args=0x1
func.ftell.ret=long
func.fts_close_INODE64.arg.0=void *,ftsp
func.fts_close_INODE64.args=0x1
func.fts_close_INODE64.ret=int
func.fts_read_INODE64.arg.0=void *,ftsp
func.fts_read_INODE64.args=0x1
func.fts_read_INODE64.ret=void *
func.getc.arg.0=FILE *,stream
func.getc.args=0x1
func.getc.ret=int
func.getchar.args=0
func.getchar.ret=int
func.getenv.arg.0=const char *,name
func.getenv.args=0x1
func.getenv.ret=char *
func.geteuid.args=0
func.geteuid.ret=uid_t
func.getpid.args=0
func.getpid.ret=int
func.getprogname.args=0
func.getprogname.ret=const char *
func.gets.arg.0=char *,s
func.gets.args=0x1
func.gets.ret=char *
func.getuid.args=0
func.getuid.ret=uid_t
func.getwc.arg.0=FILE *,stream
func.getwc.args=0x1
func.getwc.ret=wint_t
func.getwchar.args=0
func.getwchar.ret=wint_t
func.gmtime.arg.0=time_t *,timer
func.gmtime.args=0x1
func.gmtime.ret=struct tm *
func.humanize_number.arg.0=char *,buf
func.humanize_number.args=0x1
func.humanize_number.ret=int
func.ilogb.arg.0=double,x
func.ilogb.args=0x1
func.ilogb.ret=int
func.ilogbf.arg.0=float,x
func.ilogbf.args=0x1
func.ilogbf.ret=int
func.ilogbl.arg.0=long double,x
func.ilogbl.args=0x1
func.ilogbl.ret=int
func.imaxabs.arg.0=intmax_t,j
func.imaxabs.args=0x1
func.imaxabs.ret=intmax_t
func.inet_ntoa.arg.0=void *,in
func.inet_ntoa.args=0x1
func.inet_ntoa.ret=char *
func.isalnum.arg.0=int,c
func.isalnum.args=0x1
func.isalnum.ret=int
func.isalpha.arg.0=int,c
func.isalpha.args=0x1
func.isalpha.ret=int
func.isatty.arg.0=int,fd
func.isatty.args=0x1
func.isatty.ret=int
func.isblank.arg.0=int,c
func.isblank.args=0x1
func.isblank.ret=int
func.iscntrl.arg.0=int,c
func.iscntrl.args=0x1
func.iscntrl.ret=int
func.isdigit.arg.0=int,c
func.isdigit.args=0x1
func.isdigit.ret=int
func.isfinite.arg.0=double,x
func.isfinite.args=0x1
func.isfinite.ret=bool
func.isgraph.arg.0=int,c
func.isgraph.args=0x1
func.isgraph.ret=int
func.isinf.arg.0=double,x
func.isinf.args=0x1
func.isinf.ret=bool
func.islower.arg.0=int,c
func.islower.args=0x1
func.islower.ret=int
func.isnan.arg.0=double,x
func.isnan.args=0x1
func.isnan.ret=bool
func.isnormal.arg.0=double,x
func.isnormal.args=0x1
func.isnormal.ret=bool
func.isprint.arg.0=int,c
func.isprint.args=0x1
func.isprint.ret=int
func.ispunct.arg.0=int,c
func.ispunct.args=0x1
func.ispunct.ret=int
func.isspace.arg.0=int,c
func.isspace.args=0x1
func.isspace.ret=int
func.isupper.arg.0=int,c
func.isupper.args=0x1
func.isupper.ret=int
func.iswalnum.arg.0=wint_t,wc
func.iswalnum.args=0x1
func.iswalnum.ret=int
func.iswalpha.arg.0=wint_t,wc
func.iswalpha.args=0x1
func.iswalpha.ret=int
func.iswblank.arg.0=wint_t,wc
func.iswblank.args=0x1
func.iswblank.ret=int
func.iswcntrl.arg.0=wint_t,wc
func.iswcntrl.args=0x1
func.iswcntrl.ret=int
func.iswdigit.arg.0=wint_t,wc
func.iswdigit.args=0x1
func.iswdigit.ret=int
func.iswgraph.arg.0=wint_t,wc
func.iswgraph.args=0x1
func.iswgraph.ret=int
func.iswlower.arg.0=wint_t,wc
func.iswlower.args=0x1
func.iswlower.ret=int
func.iswprint.arg.0=wint_t,wc
func.iswprint.args=0x1
func.iswprint.ret=int
func.iswpunct.arg.0=wint_t,wc
func.iswpunct.args=0x1
func.iswpunct.ret=int
func.iswspace.arg.0=wint_t,wc
func.iswspace.args=0x1
func.iswspace.ret=int
func.iswupper.arg.0=wint_t,wc
func.iswupper.args=0x1
func.iswupper.ret=int
func.iswxdigit.arg.0=wint_t,wc
func.iswxdigit.args=0x1
func.iswxdigit.ret=int
func.isxdigit.arg.0=int,c
func.isxdigit.args=0x1
func.isxdigit.ret=int
func.labs.arg.0=long,j
func.labs.args=0x1
func.labs.ret=long
func.lgamma.arg.0=double,x
func.lgamma.args=0x1
func.lgamma.ret=double
func.lgammaf.arg.0=float,x
func.lgammaf.args=0x1
func.lgammaf.ret=float
func.lgammal.arg.0=long double,x
func.lgammal.args=0x1
func.lgammal.ret=long double
func.llabs.arg.0=long long,j
func.llabs.args=0x1
func.llabs.ret=long long
func.llrint.arg.0=double,x
func.llrint.args=0x1
func.llrint.ret=long long
func.llrintf.arg.0=float,x
func.llrintf.args=0x1
func.llrintf.ret=long long
func.llrintl.arg.0=long double,x
func.llrintl.args=0x1
func.llrintl.ret=long long
func.llround.arg.0=double,x
func.llround.args=0x1
func.llround.ret=long long
func.llroundf.arg.0=float,x
func.llroundf.args=0x1
func.llroundf.ret=long long
func.llroundl.arg.0=long double,x
func.llroundl.args=0x1
func.llroundl.ret=long long
func.localeconv.args=0
func.localeconv.ret=struct lconv *
func.localtime.arg.0=time_t *,timer
func.localtime.args=0x1
func.localtime.ret=struct tm *
func.log.arg.0=double,x
func.log.args=0x1
func.log.ret=double
func.log10.arg.0=double,x
func.log10.args=0x1
func.log10.ret=double
func.log10f.arg.0=float,x
func.log10f.args=0x1
func.log10f.ret=float
func.log10l.arg.0=long double,x
func.log10l.args=0x1
func.log10l.ret=long double
func.log1p.arg.0=double,x
func.log1p.args=0x1
func.log1p.ret=double
func.log1pf.arg.0=float,x
func.log1pf.args=0x1
func.log1pf.ret=float
func.log1pl.arg.0=long double,x
func.log1pl.args=0x1
func.log1pl.ret=long double
func.log2.arg.0=double,x
func.log2.args=0x1
func.log2.ret=double
func.log2f.arg.0=float,x
func.log2f.args=0x1
func.log2f.ret=float
func.log2l.arg.0=long double,x
func.log2l.args=0x1
func.log2l.ret=long double
func.logb.arg.0=double,x
func.logb.args=0x1
func.logb.ret=double
func.logbf.arg.0=float,x
func.logbf.args=0x1
func.logbf.ret=float
func.logbl.arg.0=long double,x
func.logbl.args=0x1
func.logbl.ret=long double
func.logf.arg.0=float,x
func.logf.args=0x1
func.logf.ret=float
func.logl.arg.0=long double,x
func.logl.args=0x1
func.logl.ret=long double
func.lrint.arg.0=double,x
func.lrint.args=0x1
func.lrint.ret=long
func.lrintf.arg.0=float,x
func.lrintf.args=0x1
func.lrintf.ret=long
func.lrintl.arg.0=long double,x
func.lrintl.args=0x1
func.lrintl.ret=long
func.lround.arg.0=double,x
func.lround.args=0x1
func.lround.ret=long
func.lroundf.arg.0=float,x
func.lroundf.args=0x1
func.lroundf.ret=long
func.lroundl.arg.0=long double,x
func.lroundl.args=0x1
func.lroundl.ret=long
func.malloc.arg.0=size_t,size
func.malloc.args=0x1
func.malloc.ret=void *
func.mbsinit.arg.0=mbstate_t *,ps
func.mbsinit.args=0x1
func.mbsinit.ret=int
func.mkstemp.arg.0=char *,template
func.mkstemp.args=0x1
func.mkstemp.ret=int
func.mktemp.arg.0=char *,template
func.mktemp.args=0x1
func.mktemp.ret=char *
func.mktime.arg.0=struct tm *,timeptr
func.mktime.args=0x1
func.mktime.ret=time_t
func.nan.arg.0=const char *,str
func.nan.args=0x1
func.nan.ret=double
func.nanf.arg.0=const char *,str
func.nanf.args=0x1
func.nanf.ret=float
func.nanl.arg.0=const char *,str
func.nanl.args=0x1
func.nanl.ret=long double
func.nearbyint.arg.0=double,x
func.nearbyint.args=0x1
func.nearbyint.ret=double
func.nearbyintf.arg.0=float,x
func.nearbyintf.args=0x1
func.nearbyintf.ret=float
func.nearbyintl.arg.0=long double,x
func.nearbyintl.args=0x1
func.nearbyintl.ret=long double
func.nl_langinfo.arg.0=nl_item,item
func.nl_langinfo.args=0x1
func.nl_langinfo.ret=char *
func.objc_enumerationMutation.arg.0=void *,instance
func.objc_enumerationMutation.args=0x1
func.objc_enumerationMutation.ret=void
func.objc_release.arg.0=void *,instance
func.objc_release.args=0x1
func.objc_release.ret=void
func.objc_retain.arg.0=void *,instance
func.objc_retain.args=0x1
func.objc_retain.ret=void
func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
func.objc_retainAutoreleasedReturnValue.args=0x1
func.objc_retainAutoreleasedReturnValue.ret=void
func.pclose.arg.0=FILE *,stream
func.pclose.args=0x1
func.pclose.ret=int
func.perror.arg.0=const char *,s
func.perror.args=0x1
func.perror.ret=void
func.printf.arg.0=const char *,format
func.printf.args=0x1
func.printf.ret=int
func.putchar.arg.0=int,c
func.putchar.args=0x1
func.putchar.ret=int
func.puts.arg.0=const char *,s
func.puts.args=0x1
func.puts.ret=int
func.pututxline.arg.0=void *,utx
func.pututxline.args=0x1
func.pututxline.ret=void *
func.putwchar.arg.0=wchar_t,c
func.putwchar.args=0x1
func.putwchar.ret=wint_t
func.quick_exit.arg.0=int,status
func.quick_exit.args=0x1
func.quick_exit.ret=void
func.raise.arg.0=int,sig
func.raise.args=0x1
func.raise.ret=int
func.rand.args=0
func.rand.ret=int
func.random.args=0
func.random.ret=uint32_t
func.remove.arg.0=const char *,filename
func.remove.args=0x1
func.remove.ret=int
func.rewind.arg.0=FILE *,stream
func.rewind.args=0x1
func.rewind.ret=void
func.rint.arg.0=double,x
func.rint.args=0x1
func.rint.ret=double
func.rintf.arg.0=float,x
func.rintf.args=0x1
func.rintf.ret=float
func.rintl.arg.0=long double,x
func.rintl.args=0x1
func.rintl.ret=long double
func.round.arg.0=double,x
func.round.args=0x1
func.round.ret=double
func.roundf.arg.0=float,x
func.roundf.args=0x1
func.roundf.ret=float
func.roundl.arg.0=long double,x
func.roundl.args=0x1
func.roundl.ret=long double
func.scanf.arg.0=const char *,format
func.scanf.args=0x1
func.scanf.ret=int
func.setjmp.arg.0=jmp_buf,env
func.setjmp.args=0x1
func.setjmp.ret=int
func.setstate.arg.0=const char *,state
func.setstate.args=0x1
func.setstate.ret=const char *
func.signbit.arg.0=double,x
func.signbit.args=0x1
func.signbit.ret=bool
func.sin.arg.0=double,x
func.sin.args=0x1
func.sin.ret=double
func.sinf.arg.0=float,x
func.sinf.args=0x1
func.sinf.ret=float
func.sinh.arg.0=double,x
func.sinh.args=0x1
func.sinh.ret=double
func.sinhf.arg.0=float,x
func.sinhf.args=0x1
func.sinhf.ret=float
func.sinhl.arg.0=long double,x
func.sinhl.args=0x1
func.sinhl.ret=long double
func.sinl.arg.0=long double,x
func.sinl.args=0x1
func.sinl.ret=long double
func.sleep.arg.0=int,s
func.sleep.args=0x1
func.sleep.ret=int
func.sqrt.arg.0=double,x
func.sqrt.args=0x1
func.sqrt.ret=double
func.sqrtf.arg.0=float,x
func.sqrtf.args=0x1
func.sqrtf.ret=float
func.sqrtl.arg.0=long double,x
func.sqrtl.args=0x1
func.sqrtl.ret=long double
func.srand.arg.0=int,seed
func.srand.args=0x1
func.srand.ret=void
func.srandom.arg.0=uint32_t,seed
func.srandom.args=0x1
func.srandom.ret=uint32_t
func.srandomdev.args=0
func.srandomdev.ret=void
func.strdup.arg.0=const char *,src
func.strdup.args=0x1
func.strdup.ret=char *
func.strerror.arg.0=int,errnum
func.strerror.args=0x1
func.strerror.ret=char *
func.strlen.arg.0=const char *,s
func.strlen.args=0x1
func.strlen.ret=size_t
func.system.arg.0=const char *,string
func.system.args=0x1
func.system.ret=int
func.tan.arg.0=double,x
func.tan.args=0x1
func.tan.ret=double
func.tanf.arg.0=float,x
func.tanf.args=0x1
func.tanf.ret=float
func.tanh.arg.0=double,x
func.tanh.args=0x1
func.tanh.ret=double
func.tanhf.arg.0=float,x
func.tanhf.args=0x1
func.tanhf.ret=float
func.tanhl.arg.0=long double,x
func.tanhl.args=0x1
func.tanhl.ret=long double
func.tanl.arg.0=long double,x
func.tanl.args=0x1
func.tanl.ret=long double
func.textdomain.arg.0=char *,domainname
func.textdomain.args=0x1
func.textdomain.ret=char *
func.tgamma.arg.0=double,x
func.tgamma.args=0x1
func.tgamma.ret=double
func.tgammaf.arg.0=float,x
func.tgammaf.args=0x1
func.tgammaf.ret=float
func.tgammal.arg.0=long double,x
func.tgammal.args=0x1
func.tgammal.ret=long double
func.time.arg.0=time_t *,timer
func.time.args=0x1
func.time.ret=time_t
func.tmpfile.args=0
func.tmpfile.ret=FILE *
func.tmpnam.arg.0=char *,s
func.tmpnam.args=0x1
func.tmpnam.ret=char *
func.tolower.arg.0=int,c
func.tolower.args=0x1
func.tolower.ret=int
func.toupper.arg.0=int,c
func.toupper.args=0x1
func.toupper.ret=int
func.towlower.arg.0=wint_t,wc
func.towlower.args=0x1
func.towlower.ret=wint_t
func.towupper.arg.0=wint_t,wc
func.towupper.args=0x1
func.towupper.ret=wint_t
func.trunc.arg.0=double,x
func.trunc.args=0x1
func.trunc.ret=double
func.truncf.arg.0=float,x
func.truncf.args=0x1
func.truncf.ret=float
func.truncl.arg.0=long double,x
func.truncl.args=0x1
func.truncl.ret=long double
func.umask.arg.0=int,m
func.umask.args=0x1
func.umask.ret=int
func.unlink.arg.0=const char *,path
func.unlink.args=0x1
func.unlink.ret=int
func.usleep.arg.0=int,s
func.usleep.args=0x1
func.usleep.ret=int
func.wait.arg.0=int *,wstatus
func.wait.args=0x1
func.wait.ret=pid_t
func.warn.arg.0=const char *,format
func.warn.args=0x1
func.warn.ret=void
func.warnx.arg.0=const char *,format
func.warnx.args=0x1
func.warnx.ret=void
func.wcslen.arg.0=wchar_t *,s
func.wcslen.args=0x1
func.wcslen.ret=size_t
func.wctob.arg.0=wint_t,c
func.wctob.args=0x1
func.wctob.ret=int
func.wctrans.arg.0=const char *,property
func.wctrans.args=0x1
func.wctrans.ret=wctrans_t
func.wctype.arg.0=const char *,property
func.wctype.args=0x1
func.wctype.ret=wctype_t
func.wprintf.arg.0=wchar_t *,format
func.wprintf.args=0x1
func.wprintf.ret=int
func.wscanf.arg.0=wchar_t *,format
func.wscanf.args=0x1
func.wscanf.ret=int
func.xmalloc.arg.0=size_t,size
func.xmalloc.args=0x1
func.xmalloc.ret=void *
getc=func
getchar=func
getenv=func
geteuid=func
getpid=func
getprogname=func
gets=func
getuid=func
getwc=func
getwchar=func
gmtime=func
humanize_number=func
ilogb=func
ilogbf=func
ilogbl=func
imaxabs=func
inet_ntoa=func
isalnum=func
isalpha=func
isatty=func
isblank=func
iscntrl=func
isdigit=func
isfinite=func
isgraph=func
isinf=func
islower=func
isnan=func
isnormal=func
isprint=func
ispunct=func
isspace=func
isupper=func
iswalnum=func
iswalpha=func
iswblank=func
iswcntrl=func
iswdigit=func
iswgraph=func
iswlower=func
iswprint=func
iswpunct=func
iswspace=func
iswupper=func
iswxdigit=func
isxdigit=func
labs=func
lgamma=func
lgammaf=func
lgammal=func
llabs=func
llrint=func
llrintf=func
llrintl=func
llround=func
llroundf=func
llroundl=func
localeconv=func
localtime=func
log=func
log10=func
log10f=func
log10l=func
log1p=func
log1pf=func
log1pl=func
log2=func
log2f=func
log2l=func
logb=func
logbf=func
logbl=func
logf=func
logl=func
lrint=func
lrintf=func
lrintl=func
lround=func
lroundf=func
lroundl=func
malloc=func
mbsinit=func
mkstemp=func
mktemp=func
mktime=func
nan=func
nanf=func
nanl=func
nearbyint=func
nearbyintf=func
nearbyintl=func
nl_langinfo=func
objc_enumerationMutation=func
objc_release=func
objc_retain=func
objc_retainAutoreleasedReturnValue=func
pclose=func
perror=func
printf=func
putchar=func
puts=func
pututxline=func
putwchar=func
quick_exit=func
raise=func
rand=func
random=func
remove=func
rewind=func
rint=func
rintf=func
rintl=func
round=func
roundf=func
roundl=func
scanf=func
setjmp=func
setstate=func
signbit=func
sin=func
sinf=func
sinh=func
sinhf=func
sinhl=func
sinl=func
sleep=func
sqrt=func
sqrtf=func
sqrtl=func
srand=func
srandom=func
srandomdev=func
strdup=func
strerror=func
strlen=func
system=func
tan=func
tanf=func
tanh=func
tanhf=func
tanhl=func
tanl=func
textdomain=func
tgamma=func
tgammaf=func
tgammal=func
time=func
tmpfile=func
tmpnam=func
tolower=func
toupper=func
towlower=func
towupper=func
trunc=func
truncf=func
truncl=func
umask=func
unlink=func
usleep=func
wait=func
warn=func
warnx=func
wcslen=func
wctob=func
wctrans=func
wctype=func
wprintf=func
wscanf=func
xmalloc=func

/core/analysis/cc
amd64=cc
amd64syscall=cc
cc.amd64.arg0=rdi
cc.amd64.arg1=rsi
cc.amd64.arg10=xmm4
cc.amd64.arg2=rdx
cc.amd64.arg3=rcx
cc.amd64.arg4=r8
cc.amd64.arg5=r9
cc.amd64.arg6=xmm0
cc.amd64.arg7=xmm1
cc.amd64.arg8=xmm2
cc.amd64.arg9=xmm3
cc.amd64.ret=rax
cc.amd64syscall.arg0=rdi
cc.amd64syscall.arg1=rsi
cc.amd64syscall.arg2=rdx
cc.amd64syscall.arg3=r10
cc.amd64syscall.arg4=r8
cc.amd64syscall.arg5=r9
cc.amd64syscall.ret=rax
cc.ms.arg0=rcx
cc.ms.arg1=rdx
cc.ms.arg2=r8
cc.ms.arg3=r9
cc.ms.argn=stack
cc.ms.ret=rax
cc.reg.arg0=rdi
cc.reg.arg1=rsi
cc.reg.arg2=rdx
cc.reg.arg3=rcx
cc.reg.ret=rdi
cc.swift.arg0=rdi
cc.swift.arg1=rsi
cc.swift.arg10=xmm4
cc.swift.arg2=rdx
cc.swift.arg3=rcx
cc.swift.arg4=r8
cc.swift.arg5=r9
cc.swift.arg6=xmm0
cc.swift.arg7=xmm1
cc.swift.arg8=xmm2
cc.swift.arg9=xmm3
cc.swift.error=r12
cc.swift.ret=rax
cc.swift.self=r13
default.cc=amd64
ms=cc
reg=cc
swift=cc

/core/analysis/classes

/core/analysis/classes/attrs

/core/analysis/functions
0x1000={"name":"sym._init","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":8,"bp_frame":true,"diff":{},"bbs":[4096,4116,4118]}
0x1030={"name":"sym.imp.unlink","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[4144]}
0x1040={"name":"sym.imp.strcpy","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4160]}
0x1050={"name":"sym.imp.write","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4176]}
0x1060={"name":"sym.imp.getpid","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[4192]}
0x1070={"name":"sym.imp.strlen","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4208]}
0x1080={"name":"sym.imp.__stack_chk_fail","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"noreturn":true,"diff":{},"bbs":[4224]}
0x1090={"name":"sym.imp.printf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4240]}
0x10a0={"name":"sym.imp.memset","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4256]}
0x10b0={"name":"sym.imp.sendto","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4272]}
0x10c0={"name":"sym.imp.close","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4288]}
0x10d0={"name":"sym.imp.pipe","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4304]}
0x10e0={"name":"sym.imp.read","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4320]}
0x10f0={"name":"sym.imp.getchar","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4336]}
0x1100={"name":"sym.imp.fflush","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[4352]}
0x1110={"name":"sym.imp.killpg","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4368]}
0x1120={"name":"sym.imp.recvfrom","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[4384]}
0x1130={"name":"sym.imp.bind","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"diff":{},"bbs":[4400]}
0x1140={"name":"sym.imp.getpgrp","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4416]}
0x1150={"name":"sym.imp.perror","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4432]}
0x1160={"name":"sym.imp.sprintf","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4448]}
0x1170={"name":"sym.imp.exit","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"noreturn":true,"diff":{},"bbs":[4464]}
0x1180={"name":"sym.imp.sleep","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4480]}
0x1190={"name":"sym.imp.fork","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4496]}
0x11a0={"name":"sym.imp.socket","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":1,"bp_frame":true,"pure":true,"diff":{},"bbs":[4512]}
0x11b0={"name":"entry0","bits":64,"type":1,"cc":"amd64","stack":8,"maxstack":8,"ninstr":12,"bp_frame":true,"diff":{},"bbs":[4528],"vars":[{"name":"rtld_fini","type":"void *","kind":"r","reg":"rdx","arg":true,"accs":[{"off":6,"type":"r","reg":"rdx"}]}]}
0x11e0={"name":"sym.deregister_tm_clones","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":9,"bp_frame":true,"diff":{},"bbs":[4576,4595,4607,4616]}
0x1210={"name":"sym.register_tm_clones","bits":64,"type":4,"cc":"amd64","stack":0,"maxstack":0,"ninstr":14,"bp_frame":true,"diff":{},"bbs":[4624,4660,4672,4680]}
0x1250={"name":"sym.__do_global_dtors_aux","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":14,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[4688,4701,4715,4728,4752]}
0x12a0={"name":"entry.init0","bits":64,"type":1,"cc":"amd64","stack":0,"maxstack":0,"ninstr":2,"bp_frame":true,"diff":{},"bbs":[4768]}
0x12a9={"name":"sym.add_pid","bits":64,"type":4,"cc":"amd64","stack":24,"maxstack":24,"ninstr":26,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[4777,4794,4877],"vars":[{"name":"var_4h","type":"uint64_t","kind":"b","delta":-12,"accs":[{"off":8,"type":"w","sp":18446744073709551612,"reg":"rbp"},{"off":11,"type":"r","sp":18446744073709551612,"reg":"rbp"},{"off":23,"type":"r","sp":18446744073709551612,"reg":"rbp"},{"off":71,"type":"r","sp":18446744073709551612,"reg":"rbp"}]},{"name":"arg1","type":"uint64_t","kind":"r","reg":"rdi","arg":true,"accs":[{"off":8,"type":"r","reg":"rdi"}]}]}
0x130f={"name":"sym.clisdou","bits":64,"type":4,"cc":"amd64","stack":488,"maxstack":488,"ninstr":81,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[4879,5054,5064,5229,5272,5311,5316],"vars":[{"name":"socket_name","type":"char *","kind":"b","delta":-480,"accs":[{"off":11,"type":"w","sp":18446744073709551144,"reg":"rbp"},{"off":194,"type":"r","sp":18446744073709551144,"reg":"rbp"}]},{"name":"char1","type":"const char *","kind":"b","delta":-488,"accs":[{"off":18,"type":"w","sp":18446744073709551136,"reg":"rbp"},{"off":260,"type":"r","sp":18446744073709551136,"reg":"rbp"}]},{"name":"canary","type":"int64_t","kind":"b","delta":-16,"accs":[{"off":34,"type":"w","sp":18446744073709551608,"reg":"rbp"},{"off":417,"type":"r","sp":18446744073709551608,"reg":"rbp"}]},{"name":"dest","type":"char *","kind":"b","delta":-456,"accs":[{"off":40,"type":"r","sp":18446744073709551168,"reg":"rbp"},{"off":185,"type":"w","sp":18446744073709551168,"reg":"rbp"},{"off":238,"type":"r","sp":18446744073709551168,"reg":"rbp"},{"off":294,"type":"r","sp":18446744073709551168,"reg":"rbp"}]},{"name":"socket_name_bis","type":"char *","kind":"b","delta":-344,"accs":[{"off":65,"type":"w","sp":18446744073709551280,"reg":"rbp"},{"off":201,"type":"r","sp":18446744073709551280,"reg":"rbp"},{"off":231,"type":"r","sp":18446744073709551280,"reg":"rbp"}]},{"name":"var_148h","type":"int64_t","kind":"b","delta":-336,"accs":[{"off":76,"type":"w","sp":18446744073709551288,"reg":"rbp"}]},{"name":"var_140h","type":"int64_t","kind":"b","delta":-328,"accs":[{"off":87,"type":"w","sp":18446744073709551296,"reg":"rbp"}]},{"name":"var_138h","type":"int64_t","kind":"b","delta":-320,"accs":[{"off":98,"type":"w","sp":18446744073709551304,"reg":"rbp"}]},{"name":"var_130h","type":"int64_t","kind":"b","delta":-312,"accs":[{"off":109,"type":"w","sp":18446744073709551312,"reg":"rbp"}]},{"name":"var_128h","type":"int64_t","kind":"b","delta":-304,"accs":[{"off":120,"type":"w","sp":18446744073709551320,"reg":"rbp"}]},{"name":"var_120h","type":"int64_t","kind":"b","delta":-296,"accs":[{"off":131,"type":"w","sp":18446744073709551328,"reg":"rbp"}]},{"name":"socket_fd","type":"unsigned long","kind":"b","delta":-464,"accs":[{"off":160,"type":"w","sp":18446744073709551160,"reg":"rbp"},{"off":166,"type":"r","sp":18446744073709551160,"reg":"rbp"},{"off":308,"type":"r","sp":18446744073709551160,"reg":"rbp"},{"off":370,"type":"r","sp":18446744073709551160,"reg":"rbp"},{"off":393,"type":"r","sp":18446744073709551160,"reg":"rbp"}]},{"name":"s","type":"const char *","kind":"b","delta":-280,"accs":[{"off":270,"type":"w","sp":18446744073709551344,"reg":"rbp"},{"off":276,"type":"r","sp":18446744073709551344,"reg":"rbp"},{"off":301,"type":"r","sp":18446744073709551344,"reg":"rbp"}]},{"name":"res","type":"uint64_t","kind":"b","delta":-460,"accs":[{"off":335,"type":"w","sp":18446744073709551164,"reg":"rbp"},{"off":341,"type":"r","sp":18446744073709551164,"reg":"rbp"},{"off":406,"type":"w","sp":18446744073709551164,"reg":"rbp"}]},{"name":"arg1","type":"char *","kind":"r","reg":"rdi","arg":true,"accs":[{"off":11,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"const char *","kind":"r","reg":"rsi","arg":true,"accs":[{"off":18,"type":"r","reg":"rsi"}]}]}
0x14c6={"name":"sym.ssrv","bits":64,"type":4,"cc":"amd64","stack":584,"maxstack":584,"ninstr":98,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[5318,5439,5449,5670,5693,5758,5781,5831,5836],"vars":[{"name":"canary","type":"int64_t","kind":"b","delta":-16,"accs":[{"off":20,"type":"w","sp":18446744073709551608,"reg":"rbp"},{"off":498,"type":"r","sp":18446744073709551608,"reg":"rbp"}]},{"name":"var_23ch","type":"uint64_t","kind":"b","delta":-580,"accs":[{"off":26,"type":"w","sp":18446744073709551044,"reg":"rbp"},{"off":425,"type":"w","sp":18446744073709551044,"reg":"rbp"},{"off":431,"type":"r","sp":18446744073709551044,"reg":"rbp"}]},{"name":"address","type":"char *","kind":"b","delta":-568,"accs":[{"off":36,"type":"r","sp":18446744073709551056,"reg":"rbp"},{"off":131,"type":"w","sp":18446744073709551056,"reg":"rbp"},{"off":259,"type":"r","sp":18446744073709551056,"reg":"rbp"},{"off":314,"type":"r","sp":18446744073709551056,"reg":"rbp"}]},{"name":"var_110h","type":"void *","kind":"b","delta":-280,"accs":[{"off":61,"type":"r","sp":18446744073709551344,"reg":"rbp"},{"off":389,"type":"r","sp":18446744073709551344,"reg":"rbp"},{"off":491,"type":"r","sp":18446744073709551344,"reg":"rbp"}]},{"name":"fildes","type":"unsigned long","kind":"b","delta":-576,"accs":[{"off":106,"type":"w","sp":18446744073709551048,"reg":"rbp"},{"off":112,"type":"r","sp":18446744073709551048,"reg":"rbp"},{"off":321,"type":"r","sp":18446744073709551048,"reg":"rbp"},{"off":352,"type":"r","sp":18446744073709551048,"reg":"rbp"},{"off":396,"type":"r","sp":18446744073709551048,"reg":"rbp"},{"off":440,"type":"r","sp":18446744073709551048,"reg":"rbp"},{"off":478,"type":"r","sp":18446744073709551048,"reg":"rbp"}]},{"name":"path","type":"char *","kind":"b","delta":-344,"accs":[{"off":140,"type":"w","sp":18446744073709551280,"reg":"rbp"},{"off":222,"type":"r","sp":18446744073709551280,"reg":"rbp"},{"off":252,"type":"r","sp":18446744073709551280,"reg":"rbp"},{"off":291,"type":"r","sp":18446744073709551280,"reg":"rbp"}]},{"name":"var_148h","type":"int64_t","kind":"b","delta":-336,"accs":[{"off":151,"type":"w","sp":18446744073709551288,"reg":"rbp"}]},{"name":"var_140h","type":"int64_t","kind":"b","delta":-328,"accs":[{"off":162,"type":"w","sp":18446744073709551296,"reg":"rbp"}]},{"name":"var_138h","type":"int64_t","kind":"b","delta":-320,"accs":[{"off":173,"type":"w","sp":18446744073709551304,"reg":"rbp"}]},{"name":"var_130h","type":"int64_t","kind":"b","delta":-312,"accs":[{"off":184,"type":"w","sp":18446744073709551312,"reg":"rbp"}]},{"name":"var_128h","type":"int64_t","kind":"b","delta":-304,"accs":[{"off":195,"type":"w","sp":18446744073709551320,"reg":"rbp"}]},{"name":"var_120h","type":"int64_t","kind":"b","delta":-296,"accs":[{"off":206,"type":"w","sp":18446744073709551328,"reg":"rbp"}]},{"name":"address_len","type":"socklen_t","kind":"b","delta":-584,"accs":[{"off":281,"type":"w","sp":18446744073709551040,"reg":"rbp"},{"off":306,"type":"r","sp":18446744073709551040,"reg":"rbp"},{"off":375,"type":"r","sp":18446744073709551040,"reg":"rbp"}]},{"name":"var_234h","type":"unsigned long","kind":"b","delta":-572,"accs":[{"off":337,"type":"w","sp":18446744073709551052,"reg":"rbp"},{"off":343,"type":"r","sp":18446744073709551052,"reg":"rbp"}]},{"name":"var_1c0h","type":"int64_t","kind":"b","delta":-456,"accs":[{"off":382,"type":"r","sp":18446744073709551168,"reg":"rbp"}]}]}
0x16ce={"name":"main","bits":64,"type":4,"cc":"amd64","stack":216,"maxstack":216,"ninstr":259,"bp_frame":true,"bp_off":8,"diff":{},"bbs":[5838,5940,5951,5960,5975,5984,5997,6020,6033,6162,6300,6409,6456,6588,6635,6644,6653,6662,6664,6673,6678,6679,6693,6698,6736,6884,6919,6952,6989,6996,7014,7024,7033,7090,7092,7122,7127],"vars":[{"name":"argcc","type":"int","kind":"b","delta":-204,"accs":[{"off":11,"type":"w","sp":18446744073709551420,"reg":"rbp"}]},{"name":"argvv","type":"char **","kind":"b","delta":-216,"accs":[{"off":17,"type":"w","sp":18446744073709551408,"reg":"rbp"}]},{"name":"canary","type":"int64_t","kind":"b","delta":-16,"accs":[{"off":33,"type":"w","sp":18446744073709551608,"reg":"rbp"},{"off":1237,"type":"r","sp":18446744073709551608,"reg":"rbp"}]},{"name":"pipe_read","type":"int","kind":"b","delta":-160,"accs":[{"off":39,"type":"r","sp":18446744073709551464,"reg":"rbp"},{"off":54,"type":"r","sp":18446744073709551464,"reg":"rbp"},{"off":618,"type":"r","sp":18446744073709551464,"reg":"rbp"}]},{"name":"child1_pid","type":"va_list","kind":"b","delta":-176,"accs":[{"off":87,"type":"w","sp":18446744073709551448,"reg":"rbp"},{"off":93,"type":"r","sp":18446744073709551448,"reg":"rbp"},{"off":113,"type":"r","sp":18446744073709551448,"reg":"rbp"},{"off":137,"type":"r","sp":18446744073709551448,"reg":"rbp"},{"off":182,"type":"r","sp":18446744073709551448,"reg":"rbp"},{"off":806,"type":"r","sp":18446744073709551448,"reg":"rbp"},{"off":1046,"type":"r","sp":18446744073709551448,"reg":"rbp"},{"off":1186,"type":"r","sp":18446744073709551448,"reg":"rbp"}]},{"name":"child2_pid","type":"va_list","kind":"b","delta":-188,"accs":[{"off":107,"type":"w","sp":18446744073709551436,"reg":"rbp"},{"off":146,"type":"r","sp":18446744073709551436,"reg":"rbp"},{"off":169,"type":"r","sp":18446744073709551436,"reg":"rbp"},{"off":797,"type":"r","sp":18446744073709551436,"reg":"rbp"},{"off":842,"type":"r","sp":18446744073709551436,"reg":"rbp"},{"off":1081,"type":"r","sp":18446744073709551436,"reg":"rbp"}]},{"name":"var_90h","type":"int64_t","kind":"b","delta":-152,"accs":[{"off":195,"type":"w","sp":18446744073709551472,"reg":"rbp"},{"off":305,"type":"r","sp":18446744073709551472,"reg":"rbp"},{"off":324,"type":"w","sp":18446744073709551472,"reg":"rbp"},{"off":448,"type":"r","sp":18446744073709551472,"reg":"rbp"}]},{"name":"var_8ch","type":"int64_t","kind":"b","delta":-148,"accs":[{"off":205,"type":"w","sp":18446744073709551476,"reg":"rbp"},{"off":334,"type":"w","sp":18446744073709551476,"reg":"rbp"}]},{"name":"var_88h","type":"int64_t","kind":"b","delta":-144,"accs":[{"off":215,"type":"w","sp":18446744073709551480,"reg":"rbp"},{"off":344,"type":"w","sp":18446744073709551480,"reg":"rbp"}]},{"name":"var_84h","type":"int64_t","kind":"b","delta":-140,"accs":[{"off":225,"type":"w","sp":18446744073709551484,"reg":"rbp"},{"off":354,"type":"w","sp":18446744073709551484,"reg":"rbp"}]},{"name":"var_80h","type":"int64_t","kind":"b","delta":-136,"accs":[{"off":235,"type":"w","sp":18446744073709551488,"reg":"rbp"},{"off":364,"type":"w","sp":18446744073709551488,"reg":"rbp"}]},{"name":"var_7ch","type":"int64_t","kind":"b","delta":-132,"accs":[{"off":242,"type":"w","sp":18446744073709551492,"reg":"rbp"},{"off":371,"type":"w","sp":18446744073709551492,"reg":"rbp"}]},{"name":"var_78h","type":"int64_t","kind":"b","delta":-128,"accs":[{"off":249,"type":"w","sp":18446744073709551496,"reg":"rbp"},{"off":378,"type":"w","sp":18446744073709551496,"reg":"rbp"}]},{"name":"var_74h","type":"int64_t","kind":"b","delta":-124,"accs":[{"off":256,"type":"w","sp":18446744073709551500,"reg":"rbp"},{"off":385,"type":"w","sp":18446744073709551500,"reg":"rbp"}]},{"name":"var_70h","type":"int64_t","kind":"b","delta":-120,"accs":[{"off":263,"type":"w","sp":18446744073709551504,"reg":"rbp"},{"off":392,"type":"w","sp":18446744073709551504,"reg":"rbp"}]},{"name":"var_6ch","type":"int64_t","kind":"b","delta":-116,"accs":[{"off":270,"type":"w","sp":18446744073709551508,"reg":"rbp"},{"off":399,"type":"w","sp":18446744073709551508,"reg":"rbp"}]},{"name":"var_68h","type":"int64_t","kind":"b","delta":-112,"accs":[{"off":277,"type":"w","sp":18446744073709551512,"reg":"rbp"},{"off":406,"type":"w","sp":18446744073709551512,"reg":"rbp"}]},{"name":"var_64h","type":"int64_t","kind":"b","delta":-108,"accs":[{"off":284,"type":"w","sp":18446744073709551516,"reg":"rbp"},{"off":413,"type":"w","sp":18446744073709551516,"reg":"rbp"}]},{"name":"var_60h","type":"int64_t","kind":"b","delta":-104,"accs":[{"off":291,"type":"w","sp":18446744073709551520,"reg":"rbp"},{"off":420,"type":"w","sp":18446744073709551520,"reg":"rbp"}]},{"name":"var_5ch","type":"int64_t","kind":"b","delta":-100,"accs":[{"off":298,"type":"w","sp":18446744073709551524,"reg":"rbp"},{"off":427,"type":"w","sp":18446744073709551524,"reg":"rbp"}]},{"name":"var_58h","type":"int64_t","kind":"b","delta":-96,"accs":[{"off":434,"type":"w","sp":18446744073709551528,"reg":"rbp"}]},{"name":"var_54h","type":"int64_t","kind":"b","delta":-92,"accs":[{"off":441,"type":"w","sp":18446744073709551532,"reg":"rbp"}]},{"name":"hardcoded_array","type":"int64_t","kind":"b","delta":-168,"accs":[{"off":312,"type":"w","sp":18446744073709551456,"reg":"rbp"},{"off":455,"type":"w","sp":18446744073709551456,"reg":"rbp"},{"off":555,"type":"r","sp":18446744073709551456,"reg":"rbp"},{"off":731,"type":"r","sp":18446744073709551456,"reg":"rbp"}]},{"name":"char2","type":"int64_t","kind":"b","delta":-189,"accs":[{"off":472,"type":"w","sp":18446744073709551435,"reg":"rbp"},{"off":485,"type":"r","sp":18446744073709551435,"reg":"rbp"},{"off":665,"type":"r","sp":18446744073709551435,"reg":"rbp"}]},{"name":"char1","type":"const char *","kind":"b","delta":-190,"accs":[{"off":624,"type":"r","sp":18446744073709551434,"reg":"rbp"},{"off":646,"type":"r","sp":18446744073709551434,"reg":"rbp"},{"off":903,"type":"w","sp":18446744073709551434,"reg":"rbp"},{"off":915,"type":"r","sp":18446744073709551434,"reg":"rbp"},{"off":937,"type":"r","sp":18446744073709551434,"reg":"rbp"},{"off":989,"type":"w","sp":18446744073709551434,"reg":"rbp"},{"off":995,"type":"r","sp":18446744073709551434,"reg":"rbp"},{"off":1032,"type":"r","sp":18446744073709551434,"reg":"rbp"},{"off":1114,"type":"r","sp":18446744073709551434,"reg":"rbp"},{"off":1136,"type":"r","sp":18446744073709551434,"reg":"rbp"}]},{"name":"var_46h","type":"int64_t","kind":"b","delta":-78,"accs":[{"off":860,"type":"w","sp":18446744073709551546,"reg":"rbp"}]},{"name":"var_42h","type":"int64_t","kind":"b","delta":-74,"accs":[{"off":867,"type":"w","sp":18446744073709551550,"reg":"rbp"}]},{"name":"iterator","type":"int64_t","kind":"b","delta":-180,"accs":[{"off":883,"type":"w","sp":18446744073709551444,"reg":"rbp"},{"off":1151,"type":"r","sp":18446744073709551444,"reg":"rbp"},{"off":1158,"type":"r","sp":18446744073709551444,"reg":"rbp"}]},{"name":"pipe_write","type":"int","kind":"b","delta":-156,"accs":[{"off":909,"type":"r","sp":18446744073709551468,"reg":"rbp"}]},{"name":"socket_name","type":"char *","kind":"b","delta":-72,"accs":[{"off":1052,"type":"r","sp":18446744073709551552,"reg":"rbp"},{"off":1087,"type":"r","sp":18446744073709551552,"reg":"rbp"},{"off":1121,"type":"r","sp":18446744073709551552,"reg":"rbp"}]},{"name":"arg1","type":"int64_t","kind":"r","reg":"rdi","arg":true,"accs":[{"off":11,"type":"r","reg":"rdi"}]},{"name":"arg2","type":"int64_t","kind":"r","reg":"rsi","arg":true,"accs":[{"off":17,"type":"r","reg":"rsi"}]}]}
0x1be0={"name":"sym.__libc_csu_init","bits":64,"type":4,"cc":"amd64","stack":56,"maxstack":56,"ninstr":34,"diff":{},"bbs":[7136,7191,7200,7222],"vars":[{"name":"arg3","type":"int64_t","kind":"r","reg":"rdx","arg":true,"accs":[{"off":15,"type":"r","reg":"rdx"}]},{"name":"arg2","type":"int64_t","kind":"r","reg":"rsi","arg":true,"accs":[{"off":20,"type":"r","reg":"rsi"}]},{"name":"arg1","type":"int64_t","kind":"r","reg":"rdi","arg":true,"accs":[{"off":25,"type":"r","reg":"rdi"}]}]}
0x1c50={"name":"sym.__libc_csu_fini","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":0,"ninstr":2,"bp_frame":true,"diff":{},"bbs":[7248]}
0x1c58={"name":"sym._fini","bits":64,"type":4,"cc":"amd64","stack":-8,"maxstack":8,"ninstr":4,"bp_frame":true,"diff":{},"bbs":[7256]}

/core/analysis/hints

/core/analysis/imports

/core/analysis/meta
0x0=[{"type":"C","str":"[29] ---- section size 278 named .shstrtab"}]
0x1000=[{"type":"C","str":"[12] -r-x section size 27 named .init"}]
0x1020=[{"type":"C","str":"[13] -r-x section size 400 named .plt"}]
0x1050=[{"type":"C","str":"W0RT4X_SCHL4G4X"}]
0x11b0=[{"type":"C","str":"[14] -r-x section size 2725 named .text"}]
0x11b6=[{"type":"t","str":"void *rtld_fini"}]
0x11b9=[{"type":"t","str":"int argc"}]
0x11ba=[{"type":"t","str":"char **ubp_av"}]
0x11c3=[{"type":"t","str":"void *fini"}]
0x11ca=[{"type":"t","str":"void *init"}]
0x11d1=[{"type":"t","str":"void *main"}]
0x12a9=[{"type":"C","str":"Atlas le boss"}]
0x12b1=[{"type":"t","str":"arg1"}]
0x12cc=[{"type":"t","str":"const char *format"}]
0x131a=[{"type":"t","str":"arg1"}]
0x1321=[{"type":"t","str":"arg2"},{"type":"C","str":"char"}]
0x133e=[{"type":"t","str":"size_t n"}]
0x1343=[{"type":"t","str":"int c"}]
0x1348=[{"type":"t","str":"void *s"}]
0x139b=[{"type":"t","str":"int protocol"}]
0x13a0=[{"type":"t","str":"int type"}]
0x13a5=[{"type":"t","str":"int domain"}]
0x13be=[{"type":"t","str":"int status"}]
0x13d1=[{"type":"t","str":"va_list args"}]
0x13e6=[{"type":"t","str":"const char *format"}]
0x13e9=[{"type":"t","str":"char *s"}]
0x1408=[{"type":"t","str":"const char *src"}]
0x140b=[{"type":"t","str":"char *dest"}]
0x142a=[{"type":"t","str":"const char *s"}]
0x1474=[{"type":"t","str":"const char *format"}]
0x1487=[{"type":"t","str":"int fildes"}]
0x148e=[{"type":"t","str":"int status"}]
0x149e=[{"type":"t","str":"int fildes"}]
0x14f1=[{"type":"t","str":"size_t n"}]
0x14f6=[{"type":"t","str":"int c"}]
0x14fb=[{"type":"t","str":"void *s"}]
0x150a=[{"type":"t","str":"size_t n"}]
0x150f=[{"type":"t","str":"int c"}]
0x1514=[{"type":"t","str":"void *s"}]
0x151c=[{"type":"t","str":"int protocol"}]
0x1521=[{"type":"t","str":"int type"}]
0x1526=[{"type":"t","str":"int domain"}]
0x153f=[{"type":"t","str":"int status"}]
0x15a2=[{"type":"t","str":"va_list args"}]
0x15b2=[{"type":"t","str":"const char *format"}]
0x15b5=[{"type":"t","str":"char *s"}]
0x15d4=[{"type":"t","str":"const char *src"}]
0x15d7=[{"type":"t","str":"char *dest"}]
0x15f0=[{"type":"t","str":"const char *path"}]
0x15fe=[{"type":"t","str":"socklen_t address_len"}]
0x160d=[{"type":"t","str":"struct sockaddr *address"}]
0x1610=[{"type":"t","str":"int socket"}]
0x162c=[{"type":"t","str":"int fildes"}]
0x1633=[{"type":"t","str":"int status"}]
0x1684=[{"type":"t","str":"int fildes"}]
0x168b=[{"type":"t","str":"int status"}]
0x169c=[{"type":"t","str":"FILE *stream"}]
0x16aa=[{"type":"t","str":"int fildes"}]
0x16ce=[{"type":"C","str":"Utilisation de si et sinon:\\nSi => On suit la branche verte\\nSinon => On suit la branche rouge"}]
0x16ff=[{"type":"C","str":"Création d'un tunnel pour faire de la communication inter-processus"}]
0x171b=[{"type":"C","str":"osef"}]
0x1720=[{"type":"C","str":"Création d'un processus fils"}]
0x1725=[{"type":"C","str":"Stockage du PID du nouveau processus que l'on appellera child1"}]
0x172b=[{"type":"C","str":"Si nous sommes dans child1\\nD'après le fonctionnement de fork:\\n- Si child1_pid == 0: nous sommes dans child1\\n- Si child1_pid != 0: sa valeur est le PID de child1 et nous sommes dans le parent"}]
0x1732=[{"type":"C","str":"\\n"}]
0x1734=[{"type":"C","str":"Si nous sommes dans le parent, nous créons un nouveau processus"}]
0x1739=[{"type":"C","str":"Enregistrement du PID de child2"}]
0x1746=[{"type":"C","str":"Si pas d'erreur à la création de child1"}]
0x175e=[{"type":"C","str":"Si nous sommes dans child1"}]
0x1767=[{"type":"C","str":"Si nous ne sommes pas dans child2 (En gros, si on est dans le parent)"}]
0x176d=[{"type":"C","str":"rbp - 0xb0 = i (Variable d'itération que Cutter n'a pas détectée)"}]
0x1777=[{"type":"C","str":"Si nous ne sommes pas dans child2"}]
0x1784=[{"type":"C","str":"Si nous ne sommes pas dans child1"}]
0x178b=[{"type":"C","str":"À ce stade, vous avez peut-être réalisé que quelque chose cloche\\nPour accéder au bloc de gauche il nous faut être dans child1 et child2 en même temps"}]
0x180d=[{"type":"C","str":"Définition d'un tableau avec des valeurs arbitraires"}]
0x1895=[{"type":"C","str":"Définition d'un tableau avec des valeurs arbitraires"}]
0x18a1=[{"type":"C","str":"La fonction ssrv agit comme un serveur de socket, elle crée deux fichiers (car il y a deux processus enfants)\\nLes fichiers se nomment \\"$child1_pid.nsf\\" et \\"$child2_pid.nsf\\"\\nUn caractère venant du parent est lu à chaque fois"}]
0x18a6=[{"type":"C","str":"La variable s'appelle char2 car c'est le second caractère entré qui sera utilisé ici"}]
0x18ac=[{"type":"C","str":"i += 2"}]
0x18ba=[{"type":"C","str":"char2 * i"}]
0x18c1=[{"type":"C","str":"(char2 * i) * 0x2b"}]
0x18d9=[{"type":"C","str":"Équivalent à une remise à 0 du registre ecx"}]
0x18e0=[{"type":"C","str":"Décalage de 4 bits vers la gauche (équivalent à ecx * 2^4 = ecx * 16)"}]
0x18f1=[{"type":"C","str":"rcx = i * 4"}]
0x1903=[{"type":"C","str":"eax = hardcoded_array[i * 4]"}]
0x1907=[{"type":"C","str":"Si edx == eax"}]
0x194f=[{"type":"C","str":"Lecture d'un caractère venant du tunnel IPC"}]
0x1954=[{"type":"C","str":"Le premier caractère que nous allons entrer sera utilisé dans un second temps"}]
0x195e=[{"type":"C","str":"eax = char1 * i"}]
0x196e=[{"type":"C","str":"eax = (char1 * i) * char2"}]
0x1971=[{"type":"C","str":"eax = ((char1 * i) * char2) * 8"}]
0x19b3=[{"type":"C","str":"eax = hardcoded_array[(i + 1) * 4]"}]
0x19b5=[{"type":"C","str":"eax = hardcoded_array[(i + 1) * 4] - 2"}]
0x19f2=[{"type":"C","str":"Si nous ne sommes pas dans child2"}]
0x19fb=[{"type":"C","str":"Si nous ne sommes pas dans child1"}]
0x1a04=[{"type":"C","str":"Si i <= 6"}]
0x1a0f=[{"type":"C","str":"Si i > 12"}]
0x1a1f=[{"type":"C","str":"Si nous ne sommes pas dans child2"}]
0x1a37=[{"type":"C","str":"iHuggsy nous dit bonjour, quel gentleman"}]
0x1a41=[{"type":"C","str":"initialisation de l'itérateur"}]
0x1a50=[{"type":"C","str":"On lit un caractère sur l'entrée standard"}]
0x1a55=[{"type":"C","str":"On le stocke dans char1"}]
0x1a72=[{"type":"C","str":"On envoie le caractère entré dans le tunnel IPC"}]
0x1a83=[{"type":"C","str":"%c pour printf"}]
0x1a92=[{"type":"C","str":"On affiche notre caractère (on sait pas trop pourquoi mais bon)"}]
0x1a9c=[{"type":"C","str":"pas compris"}]
0x1aa1=[{"type":"C","str":"osef"}]
0x1abd=[{"type":"C","str":"%c pour printf"}]
0x1acc=[{"type":"C","str":"On lit un autre caractère que l'on stocke dans char1 et on\\nl'affiche (la même variable est réutilisée mais char1 ici est en fait char2)"}]
0x1ad1=[{"type":"C","str":"osef"}]
0x1ae0=[{"type":"C","str":"On vérifie la parité de notre caractère. ex:\\nA = 1000001\\n1000001 & 1 = 1"}]
0x1ae2=[{"type":"C","str":"Si eax & 1 == 0"}]
0x1b00=[{"type":"C","str":"Si le caractère entré a une valeur paire, on communique avec child1"}]
0x1b23=[{"type":"C","str":"Si le caractère entré a une valeur impaire, on communique avec child2"}]
0x1b39=[{"type":"C","str":"Cette fonction envoie juste notre caractère à travers le socket spécifié"}]
0x1b45=[{"type":"C","str":"jsp pourquoi on compare avec ça mdr"}]
0x1b54=[{"type":"C","str":"\\n"}]
0x1b60=[{"type":"C","str":"Si eax < 32 (jsp pourquoi)"}]
0x1b77=[{"type":"C","str":"Si nous ne sommes pas dans child1\\nMême problème que précedemment, il nous faut être dans child1 et child2 pour accéder à la condition de victoire"}]
0x1b79=[{"type":"C","str":"Jéjé well play"}]
0x1bef=[{"type":"t","str":"arg3"}]
0x1bf4=[{"type":"t","str":"arg2"}]
0x1bf9=[{"type":"t","str":"arg1"}]
0x1c58=[{"type":"C","str":"[15] -r-x section size 13 named .fini"}]
0x2000=[{"type":"C","str":"[16] -r-- section size 208 named .rodata"}]
0x2008=[{"size":18,"type":"s","str":"ADED PID %d\\\\n @ %i"}]
0x201d=[{"size":12,"type":"s","str":"sento_error"}]
0x2029=[{"size":7,"type":"s","str":"%i.nsf"}]
0x2030=[{"size":44,"type":"s","str":"Hello, is it meee you're looking fooooor ?\\\\n"}]
0x205c=[{"size":5,"type":"s","str":"Fork"}]
0x2061=[{"size":9,"type":"s","str":"NOOO LOL"}]
0x2070=[{"size":61,"type":"s","str":"Yes sir, well played, you can validate with ESNA{your_input}"}]
0x20b0=[{"size":32,"type":"s","str":"Yes sir, just a few char left !"}]
0x20d0=[{"type":"C","str":"[17] -r-- section size 76 named .eh_frame_hdr"}]
0x2120=[{"type":"C","str":"[18] -r-- section size 312 named .eh_frame"}]
0x318=[{"type":"C","str":"[01] -r-- section size 28 named .interp"}]
0x338=[{"type":"C","str":"[02] -r-- section size 64 named .note.gnu.property"}]
0x378=[{"type":"C","str":"[03] -r-- section size 36 named .note.gnu.build-id"}]
0x39c=[{"type":"C","str":"[04] -r-- section size 32 named .note.ABI-tag"}]
0x3c0=[{"type":"C","str":"[05] -r-- section size 36 named .gnu.hash"}]
0x3de8=[{"size":8,"type":"d"},{"type":"C","str":"[19] -rw- section size 8 named .init_array"}]
0x3df0=[{"size":8,"type":"d"},{"type":"C","str":"[20] -rw- section size 8 named .fini_array"}]
0x3df8=[{"size":8,"type":"d","str":"8[60]"},{"type":"C","str":"[21] -rw- section size 480 named .dynamic"}]
0x3e00=[{"size":8,"type":"d","str":"8[60]"}]
0x3e08=[{"size":8,"type":"d","str":"8[60]"}]
0x3e10=[{"size":8,"type":"d","str":"8[60]"}]
0x3e18=[{"size":8,"type":"d","str":"8[60]"}]
0x3e20=[{"size":8,"type":"d","str":"8[60]"}]
0x3e28=[{"size":8,"type":"d","str":"8[60]"}]
0x3e30=[{"size":8,"type":"d","str":"8[60]"}]
0x3e38=[{"size":8,"type":"d","str":"8[60]"}]
0x3e40=[{"size":8,"type":"d","str":"8[60]"}]
0x3e48=[{"size":8,"type":"d","str":"8[60]"}]
0x3e50=[{"size":8,"type":"d","str":"8[60]"}]
0x3e58=[{"size":8,"type":"d","str":"8[60]"}]
0x3e60=[{"size":8,"type":"d","str":"8[60]"}]
0x3e68=[{"size":8,"type":"d","str":"8[60]"}]
0x3e70=[{"size":8,"type":"d","str":"8[60]"}]
0x3e78=[{"size":8,"type":"d","str":"8[60]"}]
0x3e8=[{"type":"C","str":"[06] -r-- section size 744 named .dynsym"}]
0x3e80=[{"size":8,"type":"d","str":"8[60]"}]
0x3e88=[{"size":8,"type":"d","str":"8[60]"}]
0x3e90=[{"size":8,"type":"d","str":"8[60]"}]
0x3e98=[{"size":8,"type":"d","str":"8[60]"}]
0x3ea0=[{"size":8,"type":"d","str":"8[60]"}]
0x3ea8=[{"size":8,"type":"d","str":"8[60]"}]
0x3eb0=[{"size":8,"type":"d","str":"8[60]"}]
0x3eb8=[{"size":8,"type":"d","str":"8[60]"}]
0x3ec0=[{"size":8,"type":"d","str":"8[60]"}]
0x3ec8=[{"size":8,"type":"d","str":"8[60]"}]
0x3ed0=[{"size":8,"type":"d","str":"8[60]"}]
0x3ed8=[{"size":8,"type":"d","str":"8[60]"}]
0x3ee0=[{"size":8,"type":"d","str":"8[60]"}]
0x3ee8=[{"size":8,"type":"d","str":"8[60]"}]
0x3ef0=[{"size":8,"type":"d","str":"8[60]"}]
0x3ef8=[{"size":8,"type":"d","str":"8[60]"}]
0x3f00=[{"size":8,"type":"d","str":"8[60]"}]
0x3f08=[{"size":8,"type":"d","str":"8[60]"}]
0x3f10=[{"size":8,"type":"d","str":"8[60]"}]
0x3f18=[{"size":8,"type":"d","str":"8[60]"}]
0x3f20=[{"size":8,"type":"d","str":"8[60]"}]
0x3f28=[{"size":8,"type":"d","str":"8[60]"}]
0x3f30=[{"size":8,"type":"d","str":"8[60]"}]
0x3f38=[{"size":8,"type":"d","str":"8[60]"}]
0x3f40=[{"size":8,"type":"d","str":"8[60]"}]
0x3f48=[{"size":8,"type":"d","str":"8[60]"}]
0x3f50=[{"size":8,"type":"d","str":"8[60]"}]
0x3f58=[{"size":8,"type":"d","str":"8[60]"}]
0x3f60=[{"size":8,"type":"d","str":"8[60]"}]
0x3f68=[{"size":8,"type":"d","str":"8[60]"}]
0x3f70=[{"size":8,"type":"d","str":"8[60]"}]
0x3f78=[{"size":8,"type":"d","str":"8[60]"}]
0x3f80=[{"size":8,"type":"d","str":"8[60]"}]
0x3f88=[{"size":8,"type":"d","str":"8[60]"}]
0x3f90=[{"size":8,"type":"d","str":"8[60]"}]
0x3f98=[{"size":8,"type":"d","str":"8[60]"}]
0x3fa0=[{"size":8,"type":"d","str":"8[60]"}]
0x3fa8=[{"size":8,"type":"d","str":"8[60]"}]
0x3fb0=[{"size":8,"type":"d","str":"8[60]"}]
0x3fb8=[{"size":8,"type":"d","str":"8[60]"}]
0x3fc0=[{"size":8,"type":"d","str":"8[60]"}]
0x3fc8=[{"size":8,"type":"d","str":"8[60]"}]
0x3fd0=[{"size":8,"type":"d","str":"8[60]"}]
0x3fd8=[{"size":8,"type":"d"},{"type":"C","str":"[22] -rw- section size 40 named .got"}]
0x3fe0=[{"size":8,"type":"d"}]
0x3fe8=[{"size":8,"type":"d"}]
0x3ff0=[{"size":8,"type":"d"}]
0x3ff8=[{"size":8,"type":"d"}]
0x4000=[{"type":"C","str":"[23] -rw- section size 216 named .got.plt"}]
0x4018=[{"size":8,"type":"d"}]
0x4020=[{"size":8,"type":"d"}]
0x4028=[{"size":8,"type":"d"}]
0x4030=[{"size":8,"type":"d"}]
0x4038=[{"size":8,"type":"d"}]
0x4040=[{"size":8,"type":"d"}]
0x4048=[{"size":8,"type":"d"}]
0x4050=[{"size":8,"type":"d"}]
0x4058=[{"size":8,"type":"d"}]
0x4060=[{"size":8,"type":"d"}]
0x4068=[{"size":8,"type":"d"}]
0x4070=[{"size":8,"type":"d"}]
0x4078=[{"size":8,"type":"d"}]
0x4080=[{"size":8,"type":"d"}]
0x4088=[{"size":8,"type":"d"}]
0x4090=[{"size":8,"type":"d"}]
0x4098=[{"size":8,"type":"d"}]
0x40a0=[{"size":8,"type":"d"}]
0x40a8=[{"size":8,"type":"d"}]
0x40b0=[{"size":8,"type":"d"}]
0x40b8=[{"size":8,"type":"d"}]
0x40c0=[{"size":8,"type":"d"}]
0x40c8=[{"size":8,"type":"d"}]
0x40d0=[{"size":8,"type":"d"}]
0x40d8=[{"type":"C","str":"[24] -rw- section size 20 named .data"}]
0x40e0=[{"size":8,"type":"d"}]
0x40f0=[{"type":"C","str":"[25] -rw- section size 40 named .bss"},{"size":8,"type":"d"}]
0x4120=[{"size":8,"type":"d"}]
0x4128=[{"size":8,"type":"d"}]
0x4130=[{"size":8,"type":"d"}]
0x4138=[{"size":8,"type":"d"}]
0x4140=[{"size":8,"type":"d"}]
0x4148=[{"size":8,"type":"d"}]
0x4150=[{"size":8,"type":"d"}]
0x4158=[{"size":8,"type":"d"}]
0x4160=[{"size":8,"type":"d"}]
0x4168=[{"size":8,"type":"d"}]
0x4170=[{"size":8,"type":"d"}]
0x4178=[{"size":8,"type":"d"}]
0x4180=[{"size":8,"type":"d"}]
0x4188=[{"size":8,"type":"d"}]
0x4190=[{"size":8,"type":"d"}]
0x4198=[{"size":8,"type":"d"}]
0x41a0=[{"size":8,"type":"d"}]
0x41a8=[{"size":8,"type":"d"}]
0x41b0=[{"size":8,"type":"d"}]
0x41b8=[{"size":8,"type":"d"}]
0x41c0=[{"size":8,"type":"d"}]
0x41c8=[{"size":8,"type":"d"}]
0x41d0=[{"size":8,"type":"d"}]
0x41d8=[{"size":8,"type":"d"}]
0x41e0=[{"size":8,"type":"d"}]
0x41e8=[{"size":8,"type":"d"}]
0x41f0=[{"size":8,"type":"d"}]
0x41f8=[{"size":8,"type":"d"}]
0x4200=[{"size":8,"type":"d"}]
0x4208=[{"size":8,"type":"d"}]
0x4210=[{"size":8,"type":"d"}]
0x4218=[{"size":8,"type":"d"}]
0x6d0=[{"type":"C","str":"[07] -r-- section size 305 named .dynstr"}]
0x802=[{"type":"C","str":"[08] -r-- section size 62 named .gnu.version"}]
0x840=[{"type":"C","str":"[09] -r-- section size 48 named .gnu.version_r"}]
0x870=[{"size":8,"type":"d","str":"8[27]"},{"type":"C","str":"[10] -r-- section size 216 named .rela.dyn"}]
0x878=[{"size":8,"type":"d","str":"8[27]"}]
0x880=[{"size":8,"type":"d","str":"8[27]"}]
0x888=[{"size":8,"type":"d","str":"8[27]"}]
0x890=[{"size":8,"type":"d","str":"8[27]"}]
0x898=[{"size":8,"type":"d","str":"8[27]"}]
0x8a0=[{"size":8,"type":"d","str":"8[27]"}]
0x8a8=[{"size":8,"type":"d","str":"8[27]"}]
0x8b0=[{"size":8,"type":"d","str":"8[27]"}]
0x8b8=[{"size":8,"type":"d","str":"8[27]"}]
0x8c0=[{"size":8,"type":"d","str":"8[27]"}]
0x8c8=[{"size":8,"type":"d","str":"8[27]"}]
0x8d0=[{"size":8,"type":"d","str":"8[27]"}]
0x8d8=[{"size":8,"type":"d","str":"8[27]"}]
0x8e0=[{"size":8,"type":"d","str":"8[27]"}]
0x8e8=[{"size":8,"type":"d","str":"8[27]"}]
0x8f0=[{"size":8,"type":"d","str":"8[27]"}]
0x8f8=[{"size":8,"type":"d","str":"8[27]"}]
0x900=[{"size":8,"type":"d","str":"8[27]"}]
0x908=[{"size":8,"type":"d","str":"8[27]"}]
0x910=[{"size":8,"type":"d","str":"8[27]"}]
0x918=[{"size":8,"type":"d","str":"8[27]"}]
0x920=[{"size":8,"type":"d","str":"8[27]"}]
0x928=[{"size":8,"type":"d","str":"8[27]"}]
0x930=[{"size":8,"type":"d","str":"8[27]"}]
0x938=[{"size":8,"type":"d","str":"8[27]"}]
0x940=[{"size":8,"type":"d","str":"8[27]"}]
0x948=[{"size":8,"type":"d","str":"8[72]"},{"type":"C","str":"[11] -r-- section size 576 named .rela.plt"}]
0x950=[{"size":8,"type":"d","str":"8[72]"}]
0x958=[{"size":8,"type":"d","str":"8[72]"}]
0x960=[{"size":8,"type":"d","str":"8[72]"}]
0x968=[{"size":8,"type":"d","str":"8[72]"}]
0x970=[{"size":8,"type":"d","str":"8[72]"}]
0x978=[{"size":8,"type":"d","str":"8[72]"}]
0x980=[{"size":8,"type":"d","str":"8[72]"}]
0x988=[{"size":8,"type":"d","str":"8[72]"}]
0x990=[{"size":8,"type":"d","str":"8[72]"}]
0x998=[{"size":8,"type":"d","str":"8[72]"}]
0x9a0=[{"size":8,"type":"d","str":"8[72]"}]
0x9a8=[{"size":8,"type":"d","str":"8[72]"}]
0x9b0=[{"size":8,"type":"d","str":"8[72]"}]
0x9b8=[{"size":8,"type":"d","str":"8[72]"}]
0x9c0=[{"size":8,"type":"d","str":"8[72]"}]
0x9c8=[{"size":8,"type":"d","str":"8[72]"}]
0x9d0=[{"size":8,"type":"d","str":"8[72]"}]
0x9d8=[{"size":8,"type":"d","str":"8[72]"}]
0x9e0=[{"size":8,"type":"d","str":"8[72]"}]
0x9e8=[{"size":8,"type":"d","str":"8[72]"}]
0x9f0=[{"size":8,"type":"d","str":"8[72]"}]
0x9f8=[{"size":8,"type":"d","str":"8[72]"}]
0xa00=[{"size":8,"type":"d","str":"8[72]"}]
0xa08=[{"size":8,"type":"d","str":"8[72]"}]
0xa10=[{"size":8,"type":"d","str":"8[72]"}]
0xa18=[{"size":8,"type":"d","str":"8[72]"}]
0xa20=[{"size":8,"type":"d","str":"8[72]"}]
0xa28=[{"size":8,"type":"d","str":"8[72]"}]
0xa30=[{"size":8,"type":"d","str":"8[72]"}]
0xa38=[{"size":8,"type":"d","str":"8[72]"}]
0xa40=[{"size":8,"type":"d","str":"8[72]"}]
0xa48=[{"size":8,"type":"d","str":"8[72]"}]
0xa50=[{"size":8,"type":"d","str":"8[72]"}]
0xa58=[{"size":8,"type":"d","str":"8[72]"}]
0xa60=[{"size":8,"type":"d","str":"8[72]"}]
0xa68=[{"size":8,"type":"d","str":"8[72]"}]
0xa70=[{"size":8,"type":"d","str":"8[72]"}]
0xa78=[{"size":8,"type":"d","str":"8[72]"}]
0xa80=[{"size":8,"type":"d","str":"8[72]"}]
0xa88=[{"size":8,"type":"d","str":"8[72]"}]
0xa90=[{"size":8,"type":"d","str":"8[72]"}]
0xa98=[{"size":8,"type":"d","str":"8[72]"}]
0xaa0=[{"size":8,"type":"d","str":"8[72]"}]
0xaa8=[{"size":8,"type":"d","str":"8[72]"}]
0xab0=[{"size":8,"type":"d","str":"8[72]"}]
0xab8=[{"size":8,"type":"d","str":"8[72]"}]
0xac0=[{"size":8,"type":"d","str":"8[72]"}]
0xac8=[{"size":8,"type":"d","str":"8[72]"}]
0xad0=[{"size":8,"type":"d","str":"8[72]"}]
0xad8=[{"size":8,"type":"d","str":"8[72]"}]
0xae0=[{"size":8,"type":"d","str":"8[72]"}]
0xae8=[{"size":8,"type":"d","str":"8[72]"}]
0xaf0=[{"size":8,"type":"d","str":"8[72]"}]
0xaf8=[{"size":8,"type":"d","str":"8[72]"}]
0xb00=[{"size":8,"type":"d","str":"8[72]"}]
0xb08=[{"size":8,"type":"d","str":"8[72]"}]
0xb10=[{"size":8,"type":"d","str":"8[72]"}]
0xb18=[{"size":8,"type":"d","str":"8[72]"}]
0xb20=[{"size":8,"type":"d","str":"8[72]"}]
0xb28=[{"size":8,"type":"d","str":"8[72]"}]
0xb30=[{"size":8,"type":"d","str":"8[72]"}]
0xb38=[{"size":8,"type":"d","str":"8[72]"}]
0xb40=[{"size":8,"type":"d","str":"8[72]"}]
0xb48=[{"size":8,"type":"d","str":"8[72]"}]
0xb50=[{"size":8,"type":"d","str":"8[72]"}]
0xb58=[{"size":8,"type":"d","str":"8[72]"}]
0xb60=[{"size":8,"type":"d","str":"8[72]"}]
0xb68=[{"size":8,"type":"d","str":"8[72]"}]
0xb70=[{"size":8,"type":"d","str":"8[72]"}]
0xb78=[{"size":8,"type":"d","str":"8[72]"}]
0xb80=[{"size":8,"type":"d","str":"8[72]"}]

/core/analysis/meta/spaces
name=CS
spacestack=["*"]

/core/analysis/meta/spaces/spaces
bin=s

/core/analysis/noreturn

/core/analysis/pins

/core/analysis/typelinks

/core/analysis/types
FILE=typedef
__div_t=struct
__idtype=enum
__imaxdiv_t=struct
__ldiv_t=struct
__lldiv_t=struct
__siginfo_t=struct
__sigset_t=struct
_fd_set=struct
bool=type
char=type
char *=type
char16_t=type
char32_t=type
char8_t=type
clock_t=typedef
div_t=typedef
double=type
enum.__idtype=P_ALL,P_GID,P_PGID
enum.__idtype.0x0=P_ALL
enum.__idtype.0x1=P_GID
enum.__idtype.0x2=P_PGID
enum.__idtype.P_ALL=0x0
enum.__idtype.P_GID=0x1
enum.__idtype.P_PGID=0x2
fd_mask=typedef
fd_set=typedef
fenv_t=typedef
fexcept_t=typedef
float=type
fpos_t=typedef
gid_t=type
id_t=type
idtype_t=typedef
imaxdiv_t=typedef
int=type
int16_t=type
int32_t=type
int64_t=type
int8_t=type
intmax_t=type
intptr_t=type
jmp_buf=typedef
lconv=struct
ldiv_t=typedef
lldiv_t=typedef
locale_t=typedef
long=type
long double=type
long int=type
long long=type
long long int=type
mbstate_t=typedef
nl_item=typedef
pid_t=type
ptrdiff_t=type
short=type
sigaction=struct
siginfo_t=typedef
sigset_t=typedef
sigval=union
size_t=type
sockaddr=struct
socklen_t=typedef
ssize_t=type
std__type_info=struct
struct.__div_t=quot,rem
struct.__div_t.quot=int,0,0
struct.__div_t.rem=int,2,0
struct.__imaxdiv_t=quot,rem
struct.__imaxdiv_t.quot=intmax_t,0,0
struct.__imaxdiv_t.rem=intmax_t,8,0
struct.__ldiv_t=quot,rem
struct.__ldiv_t.quot=long int,0,0
struct.__ldiv_t.rem=long int,4,0
struct.__lldiv_t=quot,rem
struct.__lldiv_t.quot=long long int,0,0
struct.__lldiv_t.rem=long long int,4,0
struct.__siginfo_t=si_signo,si_code,si_value,si_errno,si_pid,si_uid,si_addr,si_status,si_band
struct.__siginfo_t.si_addr=void *,28,0
struct.__siginfo_t.si_band=int,36,0
struct.__siginfo_t.si_code=int,4,0
struct.__siginfo_t.si_errno=int,16,0
struct.__siginfo_t.si_pid=pid_t,20,0
struct.__siginfo_t.si_signo=int,0,0
struct.__siginfo_t.si_status=int,32,0
struct.__siginfo_t.si_uid=uid_t,24,0
struct.__siginfo_t.si_value=union sigval,8,0
struct.__sigset_t=sig
struct.__sigset_t.sig=unsigned long,0,0
struct._fd_set=fds_bits
struct._fd_set.fds_bits=fd_mask,0,0
struct.sigaction=sa_handler,sa_flags,sa_restorer,sa_mask
struct.sigaction.sa_flags=unsigned long,8,0
struct.sigaction.sa_handler=void *,0,0
struct.sigaction.sa_mask=sigset_t,20,0
struct.sigaction.sa_restorer=void *,12,0
struct.timespec=tv_sec,tv_nsec
struct.timespec.tv_nsec=long,8,0
struct.timespec.tv_sec=time_t,0,0
struct.timeval=tv_sec,tv_usec
struct.timeval.tv_sec=time_t,0,0
struct.timeval.tv_usec=suseconds_t,8,0
struct.tm=tm_sec,tm_min,tm_hour,tm_mday,tm_mon,tm_year,tm_wday,tm_yday,tm_isdst
struct.tm.tm_hour=int,8,0
struct.tm.tm_isdst=int,32,0
struct.tm.tm_mday=int,12,0
struct.tm.tm_min=int,4,0
struct.tm.tm_mon=int,16,0
struct.tm.tm_sec=int,0,0
struct.tm.tm_wday=int,24,0
struct.tm.tm_yday=int,28,0
struct.tm.tm_year=int,20,0
suseconds_t=typedef
time_t=typedef
timespec=struct
timeval=struct
tm=struct
type.bool=b
type.bool.size=8
type.bool.typeclass=None
type.char=c
type.char *=z
type.char *.size=64
type.char *.typeclass=None
type.char.size=8
type.char.typeclass=Signed Integral
type.char16_t=c
type.char16_t.size=16
type.char16_t.typeclass=Signed Integral
type.char32_t=c
type.char32_t.size=32
type.char32_t.typeclass=Signed Integral
type.char8_t=c
type.char8_t.size=8
type.char8_t.typeclass=Signed Integral
type.double=F
type.double.size=64
type.double.typeclass=Floating
type.float=f
type.float.size=32
type.float.typeclass=Floating
type.gid_t=q
type.gid_t.size=64
type.gid_t.typeclass=Integral
type.id_t=q
type.id_t.size=64
type.id_t.typeclass=Integral
type.int=d
type.int.size=32
type.int.typeclass=Signed Integral
type.int16_t=w
type.int16_t.size=16
type.int16_t.typeclass=Signed Integral
type.int32_t=d
type.int32_t.size=32
type.int32_t.typeclass=Signed Integral
type.int64_t=q
type.int64_t.size=64
type.int64_t.typeclass=Signed Integral
type.int8_t=b
type.int8_t.size=8
type.int8_t.typeclass=Signed Integral
type.intmax_t=q
type.intmax_t.size=64
type.intmax_t.typeclass=Signed Integral
type.intptr_t=q
type.intptr_t.size=64
type.intptr_t.typeclass=Signed Integral
type.long=x
type.long double=F
type.long double.size=64
type.long double.typeclass=Floating
type.long int=x
type.long int.size=64
type.long int.typeclass=Signed Integral
type.long long=q
type.long long int=q
type.long long int.size=64
type.long long int.typeclass=Signed Integral
type.long long.size=64
type.long long.typeclass=Signed Integral
type.long.size=64
type.long.typeclass=Signed Integral
type.pid_t=q
type.pid_t.size=64
type.pid_t.typeclass=Integral
type.ptrdiff_t=q
type.ptrdiff_t.size=64
type.ptrdiff_t.typeclass=Integral
type.short=w
type.short.size=16
type.short.typeclass=Signed Integral
type.size_t=q
type.size_t.size=64
type.size_t.typeclass=Unsigned Integral
type.ssize_t=q
type.ssize_t.size=64
type.ssize_t.typeclass=Signed Integral
type.uid_t=q
type.uid_t.size=64
type.uid_t.typeclass=Integral
type.uint16_t=w
type.uint16_t.size=16
type.uint16_t.typeclass=Unsigned Integral
type.uint32_t=d
type.uint32_t.size=32
type.uint32_t.typeclass=Unsigned Integral
type.uint64_t=q
type.uint64_t.size=64
type.uint64_t.typeclass=Unsigned Integral
type.uint8_t=b
type.uint8_t.size=8
type.uint8_t.typeclass=Unsigned Integral
type.uintmax_t=q
type.uintmax_t.size=64
type.uintmax_t.typeclass=Unsigned Integral
type.uintptr_t=q
type.uintptr_t.size=64
type.uintptr_t.typeclass=Unsigned Integral
type.unknown_t=q
type.unknown_t.size=64
type.unknown_t.typeclass=Integral
type.unsigned char=b
type.unsigned char.size=8
type.unsigned char.typeclass=Unsigned Integral
type.unsigned int=i
type.unsigned int.size=32
type.unsigned int.typeclass=Unsigned Integral
type.unsigned long=d
type.unsigned long long=q
type.unsigned long long.size=64
type.unsigned long long.typeclass=Unsigned Integral
type.unsigned long.size=32
type.unsigned long.typeclass=Unsigned Integral
type.unsigned short=w
type.unsigned short.size=16
type.unsigned short.typeclass=Unsigned Integral
type.void *=p
type.void *.size=64
type.void *.typeclass=None
type.void.size=0
type.void.typeclass=None
typedef.FILE=void
typedef.clock_t=void
typedef.div_t=struct __div_t
typedef.fd_mask=long int
typedef.fd_set=struct _fd_set
typedef.fenv_t=void
typedef.fexcept_t=void
typedef.fpos_t=void
typedef.idtype_t=__idtype
typedef.imaxdiv_t=struct __imaxdiv_t
typedef.jmp_buf=void
typedef.ldiv_t=struct __ldiv_t
typedef.lldiv_t=struct __lldiv_t
typedef.locale_t=void
typedef.mbstate_t=void
typedef.nl_item=int
typedef.siginfo_t=struct __siginfo_t
typedef.sigset_t=struct __sigset_t
typedef.socklen_t=int
typedef.suseconds_t=long
typedef.time_t=long
typedef.va_list=char *
typedef.wchar_t=int
typedef.wctrans_t=unsigned int
typedef.wctype_t=int
typedef.wint_t=int
uid_t=type
uint16_t=type
uint32_t=type
uint64_t=type
uint8_t=type
uintmax_t=type
uintptr_t=type
union.sigval=sival_int,sival_ptr
union.sigval.sival_int=int,0,0
union.sigval.sival_ptr=void *,0,0
unknown_t=type
unsigned char=type
unsigned int=type
unsigned long=type
unsigned long long=type
unsigned short=type
va_list=typedef
void=type
void *=type
wchar_t=typedef
wctrans_t=typedef
wctype_t=typedef
wint_t=typedef

/core/analysis/vars

/core/analysis/xrefs
0x1008=[{"to":16360,"type":"d"}]
0x1012=[{"to":4118,"type":"c"}]
0x1026=[{"to":16400,"type":"c"}]
0x1030=[{"to":16408,"type":"c"}]
0x103b=[{"to":4128,"type":"c"}]
0x1040=[{"to":16416,"type":"c"}]
0x1046=[{"to":1,"type":"d"}]
0x104b=[{"to":4128,"type":"c"}]
0x1050=[{"to":16424,"type":"c"}]
0x1056=[{"to":2,"type":"d"}]
0x105b=[{"to":4128,"type":"c"}]
0x1060=[{"to":16432,"type":"c"}]
0x1066=[{"to":3,"type":"d"}]
0x106b=[{"to":4128,"type":"c"}]
0x1070=[{"to":16440,"type":"c"}]
0x1076=[{"to":4,"type":"d"}]
0x107b=[{"to":4128,"type":"c"}]
0x1080=[{"to":16448,"type":"c"}]
0x1086=[{"to":5,"type":"d"}]
0x108b=[{"to":4128,"type":"c"}]
0x1090=[{"to":16456,"type":"c"}]
0x1096=[{"to":6,"type":"d"}]
0x109b=[{"to":4128,"type":"c"}]
0x10a0=[{"to":16464,"type":"c"}]
0x10a6=[{"to":7,"type":"d"}]
0x10ab=[{"to":4128,"type":"c"}]
0x10b0=[{"to":16472,"type":"c"}]
0x10b6=[{"to":8,"type":"d"}]
0x10bb=[{"to":4128,"type":"c"}]
0x10c0=[{"to":16480,"type":"c"}]
0x10c6=[{"to":9,"type":"d"}]
0x10cb=[{"to":4128,"type":"c"}]
0x10d0=[{"to":16488,"type":"c"}]
0x10d6=[{"to":10,"type":"d"}]
0x10db=[{"to":4128,"type":"c"}]
0x10e0=[{"to":16496,"type":"c"}]
0x10e6=[{"to":11,"type":"d"}]
0x10eb=[{"to":4128,"type":"c"}]
0x10f0=[{"to":16504,"type":"c"}]
0x10f6=[{"to":12,"type":"d"}]
0x10fb=[{"to":4128,"type":"c"}]
0x1100=[{"to":16512,"type":"c"}]
0x1106=[{"to":13,"type":"d"}]
0x110b=[{"to":4128,"type":"c"}]
0x1110=[{"to":16520,"type":"c"}]
0x1116=[{"to":14,"type":"d"}]
0x111b=[{"to":4128,"type":"c"}]
0x1120=[{"to":16528,"type":"c"}]
0x1126=[{"to":15,"type":"d"}]
0x112b=[{"to":4128,"type":"c"}]
0x1130=[{"to":16536,"type":"c"}]
0x1136=[{"to":16,"type":"d"}]
0x113b=[{"to":4128,"type":"c"}]
0x1140=[{"to":16544,"type":"c"}]
0x1146=[{"to":17,"type":"d"}]
0x114b=[{"to":4128,"type":"c"}]
0x1150=[{"to":16552,"type":"c"}]
0x1156=[{"to":18,"type":"d"}]
0x115b=[{"to":4128,"type":"c"}]
0x1160=[{"to":16560,"type":"c"}]
0x1166=[{"to":19,"type":"d"}]
0x116b=[{"to":4128,"type":"c"}]
0x1170=[{"to":16568,"type":"c"}]
0x1176=[{"to":20,"type":"d"}]
0x117b=[{"to":4128,"type":"c"}]
0x1180=[{"to":16576,"type":"c"}]
0x1186=[{"to":21,"type":"d"}]
0x118b=[{"to":4128,"type":"c"}]
0x1190=[{"to":16584,"type":"c"}]
0x1196=[{"to":22,"type":"d"}]
0x119b=[{"to":4128,"type":"c"}]
0x11a0=[{"to":16592,"type":"c"}]
0x11a6=[{"to":23,"type":"d"}]
0x11ab=[{"to":4128,"type":"c"}]
0x11c3=[{"to":7248,"type":"d"},{"to":2694,"type":"d"}]
0x11ca=[{"to":2575,"type":"d"},{"to":7136,"type":"d"}]
0x11d1=[{"to":5838,"type":"d"},{"to":1270,"type":"d"}]
0x11d8=[{"to":16352,"type":"C"}]
0x11e0=[{"to":16624,"type":"d"}]
0x11e7=[{"to":16624,"type":"d"}]
0x11f1=[{"to":4616,"type":"c"}]
0x11f3=[{"to":16344,"type":"d"}]
0x11fd=[{"to":4616,"type":"c"}]
0x1210=[{"to":16624,"type":"d"}]
0x1217=[{"to":16624,"type":"d"}]
0x1232=[{"to":4680,"type":"c"}]
0x1234=[{"to":16368,"type":"d"}]
0x123e=[{"to":4680,"type":"c"}]
0x1254=[{"to":16632,"type":"d"}]
0x125b=[{"to":4752,"type":"c"}]
0x125e=[{"to":16376,"type":"d"}]
0x1269=[{"to":4728,"type":"c"}]
0x126b=[{"to":16608,"type":"d"}]
0x1272=[{"to":16376,"type":"C"}]
0x1278=[{"to":4576,"type":"C"}]
0x127d=[{"to":16632,"type":"d"}]
0x12a4=[{"to":4624,"type":"c"}]
0x12b8=[{"to":4877,"type":"c"}]
0x12ba=[{"to":16660,"type":"d"}]
0x12c5=[{"to":8200,"type":"d"}]
0x12d4=[{"to":4240,"type":"C"}]
0x12d9=[{"to":16660,"type":"d"}]
0x12e9=[{"to":16640,"type":"d"}]
0x12f6=[{"to":16660,"type":"d"}]
0x12ff=[{"to":16660,"type":"d"}]
0x1305=[{"to":16660,"type":"d"}]
0x130b=[{"to":4877,"type":"c"}]
0x1313=[{"to":480,"type":"d"}]
0x133e=[{"to":110,"type":"d"}]
0x134b=[{"to":4256,"type":"C"}]
0x13aa=[{"to":4512,"type":"C"}]
0x13bc=[{"to":5064,"type":"c"}]
0x13c3=[{"to":4464,"type":"C"}]
0x13df=[{"to":8218,"type":"d"}]
0x13f1=[{"to":4448,"type":"C"}]
0x140e=[{"to":4160,"type":"C"}]
0x142d=[{"to":4208,"type":"C"}]
0x1449=[{"to":110,"type":"d"}]
0x1459=[{"to":4272,"type":"C"}]
0x146b=[{"to":5272,"type":"c"}]
0x146d=[{"to":8221,"type":"d"}]
0x147c=[{"to":4240,"type":"C"}]
0x1489=[{"to":4288,"type":"C"}]
0x1493=[{"to":4464,"type":"C"}]
0x14a0=[{"to":4288,"type":"C"}]
0x14bd=[{"to":5316,"type":"c"}]
0x14bf=[{"to":4224,"type":"C"}]
0x14ca=[{"to":576,"type":"d"}]
0x14f1=[{"to":110,"type":"d"}]
0x14fe=[{"to":4256,"type":"C"}]
0x150a=[{"to":256,"type":"d"}]
0x1517=[{"to":4256,"type":"C"}]
0x152b=[{"to":4512,"type":"C"}]
0x153d=[{"to":5449,"type":"c"}]
0x1544=[{"to":4464,"type":"C"}]
0x159d=[{"to":4192,"type":"C"}]
0x15ab=[{"to":2679,"type":"d"},{"to":8233,"type":"d"}]
0x15bd=[{"to":4448,"type":"C"}]
0x15da=[{"to":4160,"type":"C"}]
0x15df=[{"to":110,"type":"d"}]
0x15f3=[{"to":4144,"type":"C"}]
0x1612=[{"to":4400,"type":"C"}]
0x1624=[{"to":5693,"type":"c"}]
0x162e=[{"to":4288,"type":"C"}]
0x1638=[{"to":4464,"type":"C"}]
0x1663=[{"to":256,"type":"d"}]
0x166a=[{"to":4384,"type":"C"}]
0x167c=[{"to":5781,"type":"c"}]
0x1686=[{"to":4288,"type":"C"}]
0x1690=[{"to":4464,"type":"C"}]
0x1695=[{"to":16624,"type":"d"}]
0x169f=[{"to":4352,"type":"C"}]
0x16ac=[{"to":4288,"type":"C"}]
0x16c5=[{"to":5836,"type":"c"}]
0x16c7=[{"to":4224,"type":"C"}]
0x16ff=[{"to":4304,"type":"C"}]
0x170a=[{"to":44,"type":"d"}]
0x170f=[{"to":8240,"type":"d"},{"to":2330,"type":"d"}]
0x171b=[{"to":4176,"type":"C"}]
0x1720=[{"to":4496,"type":"C"}]
0x1732=[{"to":5951,"type":"c"}]
0x1734=[{"to":4496,"type":"C"}]
0x1746=[{"to":5975,"type":"c"}]
0x1748=[{"to":8284,"type":"d"},{"to":2317,"type":"d"}]
0x1752=[{"to":4432,"type":"C"}]
0x175e=[{"to":5997,"type":"c"}]
0x1767=[{"to":6698,"type":"c"}]
0x177e=[{"to":6162,"type":"c"}]
0x178b=[{"to":6162,"type":"c"}]
0x1791=[{"to":33,"type":"d"}]
0x17d5=[{"to":12,"type":"d"}]
0x17dc=[{"to":12,"type":"d"}]
0x17ea=[{"to":14,"type":"d"}]
0x180d=[{"to":6300,"type":"c"}]
0x1812=[{"to":74,"type":"d"}]
0x181c=[{"to":56,"type":"d"}]
0x184f=[{"to":12,"type":"d"}]
0x18a1=[{"to":5318,"type":"C"}]
0x1907=[{"to":6456,"type":"c"}]
0x1909=[{"to":8289,"type":"d"},{"to":1873,"type":"d"}]
0x1918=[{"to":4240,"type":"C"}]
0x191d=[{"to":4416,"type":"C"}]
0x1929=[{"to":4368,"type":"C"}]
0x1933=[{"to":4464,"type":"C"}]
0x194f=[{"to":4320,"type":"C"}]
0x19ba=[{"to":6635,"type":"c"}]
0x19bc=[{"to":8289,"type":"d"},{"to":1694,"type":"d"}]
0x19cb=[{"to":4240,"type":"C"}]
0x19d0=[{"to":4416,"type":"C"}]
0x19dc=[{"to":4368,"type":"C"}]
0x19e6=[{"to":4464,"type":"C"}]
0x19f2=[{"to":6664,"type":"c"}]
0x19fb=[{"to":6664,"type":"c"}]
0x1a04=[{"to":6673,"type":"c"}]
0x1a06=[{"to":6679,"type":"c"}]
0x1a0f=[{"to":6678,"type":"c"}]
0x1a11=[{"to":6300,"type":"c"}]
0x1a1f=[{"to":7092,"type":"c"}]
0x1a25=[{"to":7024,"type":"c"}]
0x1a31=[{"to":111,"type":"d"}]
0x1a37=[{"to":32,"type":"d"}]
0x1a4b=[{"to":6996,"type":"c"}]
0x1a50=[{"to":4336,"type":"C"}]
0x1a72=[{"to":4176,"type":"C"}]
0x1a83=[{"to":8298,"type":"d"},{"to":1504,"type":"d"}]
0x1a92=[{"to":4240,"type":"C"}]
0x1a9c=[{"to":4480,"type":"C"}]
0x1aa1=[{"to":4336,"type":"C"}]
0x1aa6=[{"to":4336,"type":"C"}]
0x1abd=[{"to":8298,"type":"d"},{"to":1446,"type":"d"}]
0x1acc=[{"to":4240,"type":"C"}]
0x1ad1=[{"to":4336,"type":"C"}]
0x1ae2=[{"to":6919,"type":"c"}]
0x1aee=[{"to":1332,"type":"d"},{"to":8233,"type":"d"}]
0x1b00=[{"to":4448,"type":"C"}]
0x1b05=[{"to":6952,"type":"c"}]
0x1b11=[{"to":8233,"type":"d"},{"to":1297,"type":"d"}]
0x1b23=[{"to":4448,"type":"C"}]
0x1b39=[{"to":4879,"type":"C"}]
0x1b45=[{"to":10,"type":"d"}]
0x1b47=[{"to":6736,"type":"c"}]
0x1b60=[{"to":6736,"type":"c"}]
0x1b66=[{"to":100,"type":"d"}]
0x1b6b=[{"to":4464,"type":"C"}]
0x1b77=[{"to":7092,"type":"c"}]
0x1b79=[{"to":8304,"type":"d"},{"to":1264,"type":"d"}]
0x1b88=[{"to":4240,"type":"C"}]
0x1b8d=[{"to":4416,"type":"C"}]
0x1b99=[{"to":4368,"type":"C"}]
0x1bb0=[{"to":7127,"type":"c"}]
0x1bb2=[{"to":7122,"type":"c"}]
0x1bb4=[{"to":1269,"type":"d"},{"to":8368,"type":"d"}]
0x1bc3=[{"to":4240,"type":"C"}]
0x1bcd=[{"to":4464,"type":"C"}]
0x1bd2=[{"to":4224,"type":"C"}]
0x1be6=[{"to":15848,"type":"d"},{"to":8699,"type":"d"}]
0x1bfd=[{"to":15856,"type":"d"},{"to":8684,"type":"d"}]
0x1c0c=[{"to":4096,"type":"C"}]
0x1c15=[{"to":7222,"type":"c"}]
0x1c29=[{"to":0,"type":"C"}]
0x1c34=[{"to":7200,"type":"c"}]
0x2020=[{"to":8337,"type":"c"}]
0x2023=[{"to":8344,"type":"c"}]
0x2027=[{"to":8233,"type":"c"}]
0x2035=[{"to":32,"type":"d"}]
0x2044=[{"to":8301,"type":"c"}]
0x2046=[{"to":8365,"type":"c"}]
0x2057=[{"to":8313,"type":"c"}]
0x205e=[{"to":8395,"type":"c"}]
0x2069=[{"to":2659,"type":"d"}]
0x2072=[{"to":8340,"type":"c"}]
0x2074=[{"to":8415,"type":"c"}]
0x2076=[{"to":8356,"type":"c"}]
0x2081=[{"to":8424,"type":"c"}]
0x2083=[{"to":32,"type":"d"}]
0x2086=[{"to":8439,"type":"c"}]
0x2088=[{"to":8362,"type":"c"}]
0x2099=[{"to":8451,"type":"c"}]
0x209e=[{"to":8475,"type":"c"}]
0x20a3=[{"to":8471,"type":"c"}]
0x20b2=[{"to":8404,"type":"c"}]
0x20b4=[{"to":8479,"type":"c"}]
0x20b6=[{"to":8420,"type":"c"}]
0x20bb=[{"to":8497,"type":"c"}]
0x20c0=[{"to":8420,"type":"c"}]
0x20c7=[{"to":8425,"type":"c"}]
0x20ca=[{"to":8430,"type":"c"}]
0x212d=[{"to":8511,"type":"c"}]
0x2140=[{"to":8498,"type":"c"}]
0x216b=[{"to":63,"type":"d"}]
0x2172=[{"to":34,"type":"d"}]
0x219c=[{"to":8606,"type":"c"}]

/core/analysis/zigns

/core/analysis/zigns/spaces
name=zs
spacestack=["*"]

/core/analysis/zigns/spaces/spaces

/core/config
analysis.arch=x86
analysis.armthumb=false
analysis.autoname=false
analysis.bb.maxsize=512K
analysis.brokenrefs=false
analysis.calls=false
analysis.cpp.abi=itanium
analysis.cpu=x86
analysis.datarefs=false
analysis.delay=true
analysis.depth=64
analysis.detectwrites=false
analysis.endsize=true
analysis.esil=false
analysis.fcnprefix=fcn
analysis.from=0xffffffffffffffff
analysis.gp=0
analysis.gpfixed=true
analysis.graph_depth=256
analysis.hasnext=false
analysis.hpskip=false
analysis.ignbithints=false
analysis.in=io.maps.x
analysis.jmp.above=true
analysis.jmp.after=true
analysis.jmp.cref=false
analysis.jmp.indir=false
analysis.jmp.mid=true
analysis.jmp.ref=true
analysis.jmp.retpoline=true
analysis.jmp.tailcall=0
analysis.jmp.tbl=true
analysis.jmp.tblmax=512
analysis.limits=false
analysis.loads=false
analysis.nonull=0
analysis.nopskip=true
analysis.norevisit=false
analysis.ptrdepth=3
analysis.pushret=false
analysis.recont=false
analysis.refstr=false
analysis.rnr=false
analysis.roregs=gp,zero
analysis.sleep=0
analysis.strings=false
analysis.timeout=0
analysis.to=0xffffffffffffffff
analysis.trycatch=false
analysis.types.constraint=false
analysis.types.spec=gcc
analysis.types.verbose=false
analysis.vars=true
analysis.vars.stackname=false
analysis.verbose=false
analysis.vinfun=true
analysis.vinfunrange=false
asm.analysis=false
asm.arch=x86
asm.bb.line=false
asm.bb.middle=true
asm.bits=64
asm.bytes=false
asm.bytes.right=false
asm.bytes.space=false
asm.calls=true
asm.capitalize=false
asm.cmt.col=0
asm.cmt.esil=false
asm.cmt.flgrefs=true
asm.cmt.off=nodup
asm.cmt.patch=false
asm.cmt.refs=false
asm.cmt.right=true
asm.comments=true
asm.cpu=x86
asm.cycles=false
asm.cyclespace=false
asm.decode=false
asm.decoff=false
asm.demangle=true
asm.describe=false
asm.dwarf=true
asm.dwarf.abspath=false
asm.dwarf.file=true
asm.emu=false
asm.esil=false
asm.family=false
asm.fcn.signature=true
asm.fcn.size=false
asm.flags=true
asm.flags.inbytes=false
asm.flags.inline=false
asm.flags.limit=0
asm.flags.maxname=0
asm.flags.middle=2
asm.flags.offset=false
asm.flags.real=true
asm.functions=true
asm.hint.call=true
asm.hint.call.indirect=true
asm.hint.cdiv=false
asm.hint.emu=false
asm.hint.jmp=false
asm.hint.lea=false
asm.hint.pos=1
asm.hints=true
asm.imm.arm=0
asm.imm.str=true
asm.imm.trim=false
asm.indent=false
asm.indentspace=2
asm.instr=true
asm.invhex=false
asm.lbytes=true
asm.lines=true
asm.lines.bb=true
asm.lines.call=false
asm.lines.fcn=true
asm.lines.maxref=0
asm.lines.out=true
asm.lines.ret=false
asm.lines.right=false
asm.lines.wide=false
asm.lines.width=7
asm.marks=false
asm.meta=true
asm.midcursor=false
asm.middle=false
asm.minicols=false
asm.nbytes=10
asm.nodup=false
asm.noisy=true
asm.offset=true
asm.optype=false
asm.os=linux
asm.parser=x86.pseudo
asm.payloads=false
asm.pcalign=0
asm.pseudo=false
asm.refptr=false
asm.reloff=false
asm.reloff.flags=false
asm.section=false
asm.section.col=30
asm.section.name=true
asm.section.perm=false
asm.seggrn=4
asm.segoff=false
asm.size=false
asm.slow=true
asm.stackptr=false
asm.sub.jmp=true
asm.sub.names=true
asm.sub.reg=false
asm.sub.rel=true
asm.sub.section=false
asm.sub.tail=false
asm.sub.var=true
asm.sub.varmin=256
asm.sub.varonly=true
asm.symbol=false
asm.symbol.col=40
asm.syntax=intel
asm.tabs=0
asm.tabs.off=10
asm.tabs.once=true
asm.trace=false
asm.tracespace=false
asm.types=1
asm.ucase=false
asm.usercomments=false
asm.var=true
asm.var.access=false
asm.var.summary=0
asm.xrefs=false
asm.xrefs.code=true
asm.xrefs.fold=5
asm.xrefs.max=20
bin.at=false
bin.b64str=false
bin.baddr=0
bin.classes=true
bin.dbginfo=true
bin.debase64=false
bin.demangle=true
bin.demangle.libs=false
bin.filter=true
bin.hashlimit=10M
bin.laddr=0
bin.lang=c
bin.libs=false
bin.maxstr=0
bin.maxstrbuf=0x00a00000
bin.minstr=0
bin.rawstr=false
bin.relocs=true
bin.str.enc=guess
bin.strings=true
bin.useldr=true
bin.usextr=true
bin.verbose=false
cfg.bigendian=false
cfg.cpuaffinity=0
cfg.debug=false
cfg.editor=/usr/bin/nvim
cfg.fortunes=true
cfg.fortunes.clippy=false
cfg.fortunes.file=tips
cfg.newtab=false
cfg.oldshell=false
cfg.oldshell.autocompletion=true
cfg.plugins=true
cfg.prefixdump=dump
cfg.seek.histsize=63
cfg.seek.silent=false
cfg.user=pid52569
cfg.wseek=false
cmd.demangle=false
cmd.depth=10
cmd.hitinfo=1
cmd.repeat=false
dbg.aftersyscall=true
dbg.backend=native
dbg.bep=loader
dbg.bpinmaps=true
dbg.bpsize=1
dbg.bpsysign=false
dbg.btalgo=fuzzy
dbg.btdepth=128
dbg.clone=false
dbg.consbreak=false
dbg.create_new_console=true
dbg.execs=false
dbg.exitkills=true
dbg.follow=32
dbg.follow.child=false
dbg.forks=false
dbg.funcarg=false
dbg.gdb.page_size=0x00001000
dbg.gdb.retries=10
dbg.glibc.fastbinmax=10
dbg.glibc.fc_offset=640
dbg.glibc.ma_offset=0
dbg.glibc.tcache=true
dbg.hwbp=0
dbg.malloc=glibc
dbg.rebase=true
dbg.skipover=false
dbg.slow=false
dbg.status=false
dbg.swstep=false
dbg.threads=false
dbg.trace=false
dbg.trace.inrange=false
dbg.trace.libs=true
dbg.trace.tag=0
dbg.trace_continue=true
dbg.verbose=true
diff.bare=false
diff.from=0
diff.levenstein=false
diff.sort=addr
diff.to=0
dir.depth=10
dir.home=/home/shinji
dir.magic=/usr/share/rizin/0.3.0/magic
dir.plugins=/usr/lib/rizin/0.3.0
dir.prefix=/usr
dir.projects=~/.local/share/rizin/projects
dir.types=/usr/include
dir.zigns=~/.local/share/rizin/zigns
elf.checks.sections=true
elf.checks.segments=true
elf.load.sections=true
emu.lazy=false
emu.pre=false
emu.skip=ds
emu.ssa=false
emu.stack=false
emu.str=false
emu.str.flag=true
emu.str.inv=true
emu.str.lea=true
emu.str.off=false
emu.write=false
esil.addr.size=64
esil.breakoninvalid=true
esil.exectrap=false
esil.gotolimit=0x00001000
esil.iotrap=true
esil.nonull=false
esil.prestep=true
esil.romem=false
esil.stack.addr=0x00100000
esil.stack.depth=256
esil.stack.pattern=0
esil.stack.size=0x000f0000
esil.stats=false
esil.timeout=0
esil.verbose=0
file.info=true
file.lastpath=/home/shinji/cyber/ctfs/esna_advent/reverse/lulverse_challenge
file.loadalign=0x00000400
file.openmany=1
file.path=/home/shinji/cyber/ctfs/esna_advent/reverse/lulverse_challenge
file.type=elf
graph.aeab=false
graph.body=true
graph.bubble=false
graph.bytes=false
graph.cmtright=false
graph.comments=true
graph.dotted=false
graph.dummy=true
graph.edges=2
graph.few=false
graph.font=Courier
graph.from=0xffffffffffffffff
graph.gv.current=false
graph.gv.format=gif
graph.hints=true
graph.invscroll=false
graph.json.usenames=true
graph.layout=0
graph.linemode=1
graph.nodejmps=true
graph.ntitles=true
graph.offset=false
graph.refs=false
graph.scroll=5
graph.to=0xffffffffffffffff
graph.trace=false
hex.align=false
hex.ascii=true
hex.bytes=true
hex.cols=16
hex.comments=true
hex.compact=false
hex.depth=5
hex.flagsz=0
hex.hdroff=false
hex.header=true
hex.offset=true
hex.onechar=false
hex.pairs=false
hex.section=false
hex.stride=0
hex.style=false
http.auth=false
http.bind=localhost
http.browser=xdg-open
http.colon=false
http.cors=false
http.dietime=0
http.dirlist=false
http.homeroot=~/.local/share/rizin/www
http.index=index.html
http.log=true
http.maxport=9999
http.maxsize=0
http.port=9090
http.root=/usr/share/rizin/0.3.0/www
http.timeout=3
http.upget=false
http.upload=false
http.uproot=/tmp
http.verbose=false
io.0xff=255
io.aslr=false
io.autofd=true
io.cache=false
io.cache.auto=false
io.cache.read=false
io.cache.write=false
io.exec=true
io.ff=true
io.pava=false
io.pcache=false
io.pcache.read=false
io.pcache.write=false
io.unalloc=false
io.unalloc.ch=.
io.va=1
log.colors=false
log.events=false
log.level=4
log.srcinfo=false
log.traplevel=6
magic.depth=100
pdb.autoload=0
pdb.extract=1
pdb.server=https://msdl.microsoft.com/download/symbols
pdb.symstore=/home/shinji/.local/share/rizin/pdb
pdb.useragent=Microsoft-Symbol-Server/6.11.0001.402
prj.compress=false
prj.file=/home/shinji/cyber/write-ups/santa_nightmarish_binary/lulverse_challenge.rzdb
rap.loop=true
rop.comments=false
rop.conditional=false
rop.db=true
rop.len=5
rop.sdb=false
rop.subchains=false
scr.bgfill=false
scr.breaklines=false
scr.color=0
scr.color.args=true
scr.color.bytes=true
scr.color.grep=false
scr.color.ops=true
scr.color.pipe=false
scr.columns=0
scr.confirmquit=false
scr.dumpcols=false
scr.echo=false
scr.feedback=1
scr.fgets=false
scr.fix.columns=0
scr.fix.rows=0
scr.flush=false
scr.fps=false
scr.gadgets=true
scr.highlight.grep=false
scr.hist.block=true
scr.histsave=true
scr.html=false
scr.interactive=0
scr.last=true
scr.linesleep=0
scr.maxtab=0x00001000
scr.nkey=flag
scr.null=false
scr.pagesize=1
scr.panelborder=false
scr.prompt=true
scr.prompt.file=false
scr.prompt.flag=false
scr.prompt.mode=false
scr.prompt.popup=false
scr.prompt.sect=false
scr.prompt.vi=false
scr.rainbow=false
scr.randpal=false
scr.responsive=false
scr.rows=0
scr.scrollbar=0
scr.slow=true
scr.square=true
scr.strconv=asciiesc
scr.utf8=true
scr.utf8.curvy=false
scr.wheel=true
scr.wheel.nkey=false
scr.wheel.speed=4
scr.wideoff=false
search.align=0
search.chunk=0
search.contiguous=true
search.distance=0
search.esilcombo=8
search.flags=false
search.from=0xffffffffffffffff
search.in=io.maps
search.kwidx=0
search.maxhits=0
search.overlap=false
search.prefix=hit
search.show=true
search.to=0xffffffffffffffff
stack.anotated=false
stack.bytes=true
stack.delta=0
stack.reg=SP
stack.size=64
str.escbslash=false
tcp.islocal=false
time.fmt=%Y-%m-%d %H:%M:%S %z
time.zone=0
zign.autoload=false
zign.diff.bthresh=1.0
zign.diff.gthresh=1.0
zign.match.bytes=true
zign.match.graph=true
zign.match.hash=true
zign.match.offset=false
zign.match.refs=true
zign.match.types=false
zign.maxsz=500
zign.mincc=10
zign.minsz=16
zign.prefix=sign
zign.threshold=0.0
zoom.byte=h
zoom.from=0
zoom.in=io.map
zoom.maxsz=512
zoom.to=0

/core/file
absolute=/home/shinji/cyber/ctfs/esna_advent/reverse/lulverse_challenge
raw=/home/shinji/cyber/ctfs/esna_advent/reverse/lulverse_challenge
relative=../../ctfs/esna_advent/reverse/lulverse_challenge

/core/flags
base=0
realnames=1

/core/flags/flags
entry.fini0={"realname":"entry.fini0","demangled":false,"offset":4688,"size":1,"space":"symbols"}
entry.init0={"realname":"entry.init0","demangled":false,"offset":4768,"size":9,"space":"symbols"}
entry0={"realname":"entry0","demangled":false,"offset":4528,"size":46,"space":"symbols"}
i={"realname":"i","demangled":false,"offset":5110,"size":1}
loc.__GNU_EH_FRAME_HDR={"realname":"__GNU_EH_FRAME_HDR","demangled":false,"offset":8400,"size":0,"space":"symbols"}
loc.__bss_start={"realname":"__bss_start","demangled":false,"offset":16620,"size":0,"space":"symbols"}
loc.__data_start={"realname":"__data_start","demangled":false,"offset":16600,"size":0,"space":"symbols"}
loc.__init_array_end={"realname":"__init_array_end","demangled":false,"offset":15856,"size":0,"space":"symbols"}
loc.__init_array_start={"realname":"__init_array_start","demangled":false,"offset":15848,"size":0,"space":"symbols"}
loc._edata={"realname":"_edata","demangled":false,"offset":16620,"size":0,"space":"symbols"}
loc._end={"realname":"_end","demangled":false,"offset":16664,"size":0,"space":"symbols"}
loc.data_start={"realname":"data_start","demangled":false,"offset":16600,"size":0,"space":"symbols"}
loc.imp._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":0,"size":16,"space":"imports"}
loc.imp._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":0,"size":16,"space":"imports"}
loc.imp.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":0,"size":16,"space":"imports"}
main={"realname":"main","demangled":false,"offset":5838,"size":1291,"space":"symbols"}
obj._DYNAMIC={"realname":"_DYNAMIC","demangled":false,"offset":15864,"size":0,"space":"symbols"}
obj._GLOBAL_OFFSET_TABLE={"realname":"_GLOBAL_OFFSET_TABLE_","demangled":false,"offset":16384,"size":0,"space":"symbols"}
obj._IO_stdin_used={"realname":"_IO_stdin_used","demangled":false,"offset":8192,"size":4,"space":"symbols"}
obj.__FRAME_END={"realname":"__FRAME_END__","demangled":false,"offset":8788,"size":0,"space":"symbols"}
obj.__TMC_END={"realname":"__TMC_END__","demangled":false,"offset":16624,"size":0,"space":"symbols"}
obj.__abi_tag={"realname":"__abi_tag","demangled":false,"offset":924,"size":32,"space":"symbols"}
obj.__do_global_dtors_aux_fini_array_entry={"realname":"__do_global_dtors_aux_fini_array_entry","demangled":false,"offset":15856,"size":0,"space":"symbols"}
obj.__dso_handle={"realname":"__dso_handle","demangled":false,"offset":16608,"size":0,"space":"symbols"}
obj.__frame_dummy_init_array_entry={"realname":"__frame_dummy_init_array_entry","demangled":false,"offset":15848,"size":0,"space":"symbols"}
obj.completed.0={"realname":"completed.0","demangled":false,"offset":16632,"size":1,"space":"symbols"}
obj.max_pc={"realname":"max_pc","demangled":false,"offset":16616,"size":4,"space":"symbols"}
obj.pc={"realname":"pc","demangled":false,"offset":16660,"size":4,"space":"symbols"}
obj.pids={"realname":"pids","demangled":false,"offset":16640,"size":20,"space":"symbols"}
obj.stdout={"realname":"stdout","demangled":false,"offset":16624,"size":8,"space":"symbols"}
obj.stdout_GLIBC_2.2.5={"realname":"stdout@GLIBC_2.2.5","demangled":false,"offset":16624,"size":8,"space":"symbols"}
reloc._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":16344,"size":8,"space":"relocs"}
reloc._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":16368,"size":8,"space":"relocs"}
reloc.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":16376,"size":8,"space":"relocs"}
reloc.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":16360,"size":8,"space":"relocs"}
reloc.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":16352,"size":8,"space":"relocs"}
reloc.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":16448,"size":8,"space":"relocs"}
reloc.bind={"realname":"bind","demangled":false,"offset":16536,"size":8,"space":"relocs"}
reloc.close={"realname":"close","demangled":false,"offset":16480,"size":8,"space":"relocs"}
reloc.exit={"realname":"exit","demangled":false,"offset":16568,"size":8,"space":"relocs"}
reloc.fflush={"realname":"fflush","demangled":false,"offset":16512,"size":8,"space":"relocs"}
reloc.fork={"realname":"fork","demangled":false,"offset":16584,"size":8,"space":"relocs"}
reloc.getchar={"realname":"getchar","demangled":false,"offset":16504,"size":8,"space":"relocs"}
reloc.getpgrp={"realname":"getpgrp","demangled":false,"offset":16544,"size":8,"space":"relocs"}
reloc.getpid={"realname":"getpid","demangled":false,"offset":16432,"size":8,"space":"relocs"}
reloc.killpg={"realname":"killpg","demangled":false,"offset":16520,"size":8,"space":"relocs"}
reloc.memset={"realname":"memset","demangled":false,"offset":16464,"size":8,"space":"relocs"}
reloc.perror={"realname":"perror","demangled":false,"offset":16552,"size":8,"space":"relocs"}
reloc.pipe={"realname":"pipe","demangled":false,"offset":16488,"size":8,"space":"relocs"}
reloc.printf={"realname":"printf","demangled":false,"offset":16456,"size":8,"space":"relocs"}
reloc.read={"realname":"read","demangled":false,"offset":16496,"size":8,"space":"relocs"}
reloc.recvfrom={"realname":"recvfrom","demangled":false,"offset":16528,"size":8,"space":"relocs"}
reloc.sendto={"realname":"sendto","demangled":false,"offset":16472,"size":8,"space":"relocs"}
reloc.sleep={"realname":"sleep","demangled":false,"offset":16576,"size":8,"space":"relocs"}
reloc.socket={"realname":"socket","demangled":false,"offset":16592,"size":8,"space":"relocs"}
reloc.sprintf={"realname":"sprintf","demangled":false,"offset":16560,"size":8,"space":"relocs"}
reloc.stdout={"realname":"stdout","demangled":false,"offset":16624,"size":8,"space":"relocs"}
reloc.strcpy={"realname":"strcpy","demangled":false,"offset":16416,"size":8,"space":"relocs"}
reloc.strlen={"realname":"strlen","demangled":false,"offset":16440,"size":8,"space":"relocs"}
reloc.target._ITM_deregisterTMCloneTable={"realname":"_ITM_deregisterTMCloneTable","demangled":false,"offset":16888,"size":8,"space":"relocs"}
reloc.target._ITM_registerTMCloneTable={"realname":"_ITM_registerTMCloneTable","demangled":false,"offset":16912,"size":8,"space":"relocs"}
reloc.target.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":16920,"size":8,"space":"relocs"}
reloc.target.__gmon_start={"realname":"__gmon_start__","demangled":false,"offset":16904,"size":8,"space":"relocs"}
reloc.target.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":16896,"size":8,"space":"relocs"}
reloc.target.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":16712,"size":8,"space":"relocs"}
reloc.target.bind={"realname":"bind","demangled":false,"offset":16800,"size":8,"space":"relocs"}
reloc.target.close={"realname":"close","demangled":false,"offset":16744,"size":8,"space":"relocs"}
reloc.target.exit={"realname":"exit","demangled":false,"offset":16832,"size":8,"space":"relocs"}
reloc.target.fflush={"realname":"fflush","demangled":false,"offset":16776,"size":8,"space":"relocs"}
reloc.target.fork={"realname":"fork","demangled":false,"offset":16848,"size":8,"space":"relocs"}
reloc.target.getchar={"realname":"getchar","demangled":false,"offset":16768,"size":8,"space":"relocs"}
reloc.target.getpgrp={"realname":"getpgrp","demangled":false,"offset":16808,"size":8,"space":"relocs"}
reloc.target.getpid={"realname":"getpid","demangled":false,"offset":16696,"size":8,"space":"relocs"}
reloc.target.killpg={"realname":"killpg","demangled":false,"offset":16784,"size":8,"space":"relocs"}
reloc.target.memset={"realname":"memset","demangled":false,"offset":16728,"size":8,"space":"relocs"}
reloc.target.perror={"realname":"perror","demangled":false,"offset":16816,"size":8,"space":"relocs"}
reloc.target.pipe={"realname":"pipe","demangled":false,"offset":16752,"size":8,"space":"relocs"}
reloc.target.printf={"realname":"printf","demangled":false,"offset":16720,"size":8,"space":"relocs"}
reloc.target.read={"realname":"read","demangled":false,"offset":16760,"size":8,"space":"relocs"}
reloc.target.recvfrom={"realname":"recvfrom","demangled":false,"offset":16792,"size":8,"space":"relocs"}
reloc.target.sendto={"realname":"sendto","demangled":false,"offset":16736,"size":8,"space":"relocs"}
reloc.target.sleep={"realname":"sleep","demangled":false,"offset":16840,"size":8,"space":"relocs"}
reloc.target.socket={"realname":"socket","demangled":false,"offset":16856,"size":8,"space":"relocs"}
reloc.target.sprintf={"realname":"sprintf","demangled":false,"offset":16824,"size":8,"space":"relocs"}
reloc.target.stdout={"realname":"stdout","demangled":false,"offset":16624,"size":8,"space":"relocs"}
reloc.target.strcpy={"realname":"strcpy","demangled":false,"offset":16680,"size":8,"space":"relocs"}
reloc.target.strlen={"realname":"strlen","demangled":false,"offset":16704,"size":8,"space":"relocs"}
reloc.target.unlink={"realname":"unlink","demangled":false,"offset":16672,"size":8,"space":"relocs"}
reloc.target.write={"realname":"write","demangled":false,"offset":16688,"size":8,"space":"relocs"}
reloc.unlink={"realname":"unlink","demangled":false,"offset":16408,"size":8,"space":"relocs"}
reloc.write={"realname":"write","demangled":false,"offset":16424,"size":8,"space":"relocs"}
section.={"realname":"section.","demangled":false,"offset":0,"size":0,"space":"sections"}
section..bss={"realname":"section..bss","demangled":false,"offset":16624,"size":40,"space":"sections"}
section..comment={"realname":"section..comment","demangled":false,"offset":0,"size":18,"space":"sections"}
section..data={"realname":"section..data","demangled":false,"offset":16600,"size":20,"space":"sections"}
section..dynamic={"realname":"section..dynamic","demangled":false,"offset":15864,"size":480,"space":"sections"}
section..dynstr={"realname":"section..dynstr","demangled":false,"offset":1744,"size":305,"space":"sections"}
section..dynsym={"realname":"section..dynsym","demangled":false,"offset":1000,"size":744,"space":"sections"}
section..eh_frame={"realname":"section..eh_frame","demangled":false,"offset":8480,"size":312,"space":"sections"}
section..eh_frame_hdr={"realname":"section..eh_frame_hdr","demangled":false,"offset":8400,"size":76,"space":"sections"}
section..fini={"realname":"section..fini","demangled":false,"offset":7256,"size":13,"space":"sections"}
section..fini_array={"realname":"section..fini_array","demangled":false,"offset":15856,"size":8,"space":"sections"}
section..gnu.hash={"realname":"section..gnu.hash","demangled":false,"offset":960,"size":36,"space":"sections"}
section..gnu.version={"realname":"section..gnu.version","demangled":false,"offset":2050,"size":62,"space":"sections"}
section..gnu.version_r={"realname":"section..gnu.version_r","demangled":false,"offset":2112,"size":48,"space":"sections"}
section..got={"realname":"section..got","demangled":false,"offset":16344,"size":40,"space":"sections"}
section..got.plt={"realname":"section..got.plt","demangled":false,"offset":16384,"size":216,"space":"sections"}
section..init={"realname":"section..init","demangled":false,"offset":4096,"size":27,"space":"sections"}
section..init_array={"realname":"section..init_array","demangled":false,"offset":15848,"size":8,"space":"sections"}
section..interp={"realname":"section..interp","demangled":false,"offset":792,"size":28,"space":"sections"}
section..note.ABI_tag={"realname":"section..note.ABI_tag","demangled":false,"offset":924,"size":32,"space":"sections"}
section..note.gnu.build_id={"realname":"section..note.gnu.build_id","demangled":false,"offset":888,"size":36,"space":"sections"}
section..note.gnu.property={"realname":"section..note.gnu.property","demangled":false,"offset":824,"size":64,"space":"sections"}
section..plt={"realname":"section..plt","demangled":false,"offset":4128,"size":400,"space":"sections"}
section..rela.dyn={"realname":"section..rela.dyn","demangled":false,"offset":2160,"size":216,"space":"sections"}
section..rela.plt={"realname":"section..rela.plt","demangled":false,"offset":2376,"size":576,"space":"sections"}
section..rodata={"realname":"section..rodata","demangled":false,"offset":8192,"size":208,"space":"sections"}
section..shstrtab={"realname":"section..shstrtab","demangled":false,"offset":0,"size":278,"space":"sections"}
section..strtab={"realname":"section..strtab","demangled":false,"offset":0,"size":1021,"space":"sections"}
section..symtab={"realname":"section..symtab","demangled":false,"offset":0,"size":1704,"space":"sections"}
section..text={"realname":"section..text","demangled":false,"offset":4528,"size":2725,"space":"sections"}
segment.DYNAMIC={"realname":"segment.DYNAMIC","demangled":false,"offset":15864,"size":480,"space":"segments"}
segment.GNU_EH_FRAME={"realname":"segment.GNU_EH_FRAME","demangled":false,"offset":8400,"size":76,"space":"segments"}
segment.GNU_RELRO={"realname":"segment.GNU_RELRO","demangled":false,"offset":15848,"size":536,"space":"segments"}
segment.GNU_STACK={"realname":"segment.GNU_STACK","demangled":false,"offset":0,"size":0,"space":"segments"}
segment.INTERP={"realname":"segment.INTERP","demangled":false,"offset":792,"size":28,"space":"segments"}
segment.LOAD0={"realname":"segment.LOAD0","demangled":false,"offset":0,"size":2952,"space":"segments"}
segment.LOAD1={"realname":"segment.LOAD1","demangled":false,"offset":4096,"size":3173,"space":"segments"}
segment.LOAD2={"realname":"segment.LOAD2","demangled":false,"offset":8192,"size":600,"space":"segments"}
segment.LOAD3={"realname":"segment.LOAD3","demangled":false,"offset":15848,"size":816,"space":"segments"}
segment.NOTE={"realname":"segment.NOTE","demangled":false,"offset":824,"size":64,"space":"segments"}
segment.NOTE_1={"realname":"segment.NOTE_1","demangled":false,"offset":888,"size":68,"space":"segments"}
segment.PHDR={"realname":"segment.PHDR","demangled":false,"offset":64,"size":728,"space":"segments"}
segment.UNKNOWN={"realname":"segment.UNKNOWN","demangled":false,"offset":824,"size":64,"space":"segments"}
segment.ehdr={"realname":"segment.ehdr","demangled":false,"offset":0,"size":64,"space":"segments"}
str.ADED_PID__d______i={"realname":"str.ADED_PID__d______i","demangled":false,"offset":8200,"size":18,"space":"strings"}
str.Fork={"realname":"str.Fork","demangled":false,"offset":8284,"size":5,"space":"strings"}
str.Hello__is_it_meee_you_re_looking_fooooor={"realname":"str.Hello__is_it_meee_you_re_looking_fooooor","demangled":false,"offset":8240,"size":44,"space":"strings"}
str.NOOO_LOL={"realname":"str.NOOO_LOL","demangled":false,"offset":8289,"size":9,"space":"strings"}
str.Yes_sir__just_a_few_char_left={"realname":"str.Yes_sir__just_a_few_char_left","demangled":false,"offset":8368,"size":32,"space":"strings"}
str.Yes_sir__well_played__you_can_validate_with_ESNA_your_input={"realname":"str.Yes_sir__well_played__you_can_validate_with_ESNA_your_input","demangled":false,"offset":8304,"size":61,"space":"strings"}
str.i.nsf={"realname":"str.i.nsf","demangled":false,"offset":8233,"size":7,"space":"strings"}
str.sento_error={"realname":"str.sento_error","demangled":false,"offset":8221,"size":12,"space":"strings"}
sym.__do_global_dtors_aux={"realname":"__do_global_dtors_aux","demangled":false,"offset":4688,"size":65,"space":"symbols"}
sym.__libc_csu_fini={"realname":"__libc_csu_fini","demangled":false,"offset":7248,"size":5,"space":"symbols"}
sym.__libc_csu_init={"realname":"__libc_csu_init","demangled":false,"offset":7136,"size":101,"space":"symbols"}
sym._fini={"realname":"_fini","demangled":false,"offset":7256,"size":13,"space":"symbols"}
sym._init={"realname":"_init","demangled":false,"offset":4096,"size":27,"space":"symbols"}
sym._start={"realname":"_start","demangled":false,"offset":4528,"size":47,"space":"symbols"}
sym.add_pid={"realname":"add_pid","demangled":false,"offset":4777,"size":102,"space":"symbols"}
sym.clisdou={"realname":"clisdou","demangled":false,"offset":4879,"size":439,"space":"symbols"}
sym.deregister_tm_clones={"realname":"deregister_tm_clones","demangled":false,"offset":4576,"size":41,"space":"symbols"}
sym.frame_dummy={"realname":"frame_dummy","demangled":false,"offset":4768,"size":0,"space":"symbols"}
sym.imp.__cxa_finalize={"realname":"__cxa_finalize","demangled":false,"offset":0,"size":16,"space":"imports"}
sym.imp.__libc_start_main={"realname":"__libc_start_main","demangled":false,"offset":0,"size":16,"space":"imports"}
sym.imp.__stack_chk_fail={"realname":"__stack_chk_fail","demangled":false,"offset":4224,"size":6,"space":"imports"}
sym.imp.bind={"realname":"bind","demangled":false,"offset":4400,"size":6,"space":"imports"}
sym.imp.close={"realname":"close","demangled":false,"offset":4288,"size":6,"space":"imports"}
sym.imp.exit={"realname":"exit","demangled":false,"offset":4464,"size":6,"space":"imports"}
sym.imp.fflush={"realname":"fflush","demangled":false,"offset":4352,"size":6,"space":"imports"}
sym.imp.fork={"realname":"fork","demangled":false,"offset":4496,"size":6,"space":"imports"}
sym.imp.getchar={"realname":"getchar","demangled":false,"offset":4336,"size":6,"space":"imports"}
sym.imp.getpgrp={"realname":"getpgrp","demangled":false,"offset":4416,"size":6,"space":"imports"}
sym.imp.getpid={"realname":"getpid","demangled":false,"offset":4192,"size":6,"space":"imports"}
sym.imp.killpg={"realname":"killpg","demangled":false,"offset":4368,"size":6,"space":"imports"}
sym.imp.memset={"realname":"memset","demangled":false,"offset":4256,"size":6,"space":"imports"}
sym.imp.perror={"realname":"perror","demangled":false,"offset":4432,"size":6,"space":"imports"}
sym.imp.pipe={"realname":"pipe","demangled":false,"offset":4304,"size":6,"space":"imports"}
sym.imp.printf={"realname":"printf","demangled":false,"offset":4240,"size":6,"space":"imports"}
sym.imp.read={"realname":"read","demangled":false,"offset":4320,"size":6,"space":"imports"}
sym.imp.recvfrom={"realname":"recvfrom","demangled":false,"offset":4384,"size":6,"space":"imports"}
sym.imp.sendto={"realname":"sendto","demangled":false,"offset":4272,"size":6,"space":"imports"}
sym.imp.sleep={"realname":"sleep","demangled":false,"offset":4480,"size":6,"space":"imports"}
sym.imp.socket={"realname":"socket","demangled":false,"offset":4512,"size":6,"space":"imports"}
sym.imp.sprintf={"realname":"sprintf","demangled":false,"offset":4448,"size":6,"space":"imports"}
sym.imp.strcpy={"realname":"strcpy","demangled":false,"offset":4160,"size":6,"space":"imports"}
sym.imp.strlen={"realname":"strlen","demangled":false,"offset":4208,"size":6,"space":"imports"}
sym.imp.unlink={"realname":"unlink","demangled":false,"offset":4144,"size":6,"space":"imports"}
sym.imp.write={"realname":"write","demangled":false,"offset":4176,"size":6,"space":"imports"}
sym.main={"realname":"main","demangled":false,"offset":5838,"size":1291,"space":"symbols"}
sym.register_tm_clones={"realname":"register_tm_clones","demangled":false,"offset":4624,"size":57,"space":"symbols"}
sym.ssrv={"realname":"ssrv","demangled":false,"offset":5318,"size":520,"space":"symbols"}

/core/flags/spaces
name=fs
spacestack=["*"]

/core/flags/spaces/spaces
classes=s
functions=s
imports=s
platform.ports=s
registers=s
registers.extended=s
registers.mmio=s
relocs=s
search=s
sections=s
segments=s
strings=s
symbols=s

/core/flags/tags
tag.alloc=malloc free$ calloc kalloc realloc
tag.dylib=dlopen dlsym dlclose mmap LoadLibrary GetProcAddress
tag.env=getenv putenv unsetenv setenv GetEnvironmentVariable SetEnvironmentVariable ExpandEnvironmentStrings
tag.fs=open$ close read$ write CloseHandle FindFirstFileW _wfopen _wstat ftruncate lseek _chsize GetFullPathName realpath RemoveDirectory DeleteFile CreateFile WriteFile UnmapViewOfFile CreateFileMapping MapViewOfFile readlink chmod fchmod chown stat fstat lstat fstatat lstat64 stat64 chflags fchflags lchflags
tag.network=socket connect bind$ listen accept sendto recvfrom gethostbyname htons ntohs
tag.process=getpid getppid kill exit abort assert gethostid sethostid sysctl
tag.stdout=^printf puts write
tag.string=strcat strcpy strncpy strlen strtok strstr strlcpy asprintf sprintf snprintf
tag.threads=pthread_create pthread_mutex_init pthread_cond_init CreateThread TerminateThread WaitForSingleObject GetCurrentThreadId
tag.time=settimeofday gettimeofday time adjtime ctime timed date$ sleep Sleep usleep clock_nanosleep localtime asctime difftime gmtime mktime timelocal timegm tzfile tzset

/core/flags/zones
